{"version":3,"sources":["store.js","User.js","TodoItem.js","TodoList.js","GetTodosWithUsers.js","api/getUrl.js","Main.js","App.js","index.js"],"names":["initialState","todos","store","createStore","state","action","type","Object","objectSpread2","User","_ref","user","react_default","a","createElement","name","connect","settodos","newSetData","dispatch","todo","status","completed","className","id","title","src_User","onClick","filteredTodos","filter","todos","usersFromColection","deleteItem","TodoList","props","map","src_TodoItem","key","getTodosWithUsers","users","find","userId","getUrl","URL","fetch","then","todolist","json","newtodos","_useState","useState","_useState2","slicedToArray","loaded","setLoaded","_useState3","_useState4","isLoading","setIsLoading","preparedTodos","_ref2","_ref3","usersObject","todosObject","regenerator_default","async","_context","prev","next","awrap","Promise","all","getURL","sent","stop","src_TodoList","App","src_Main","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.28b45e70.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_ROW':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    default:\n      return state;\n  }\n};\n\nconst todos = [[], []];\n\nconst initialState = {\n  todos,\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction User({ user }) {\n  return <td>{user.name}</td>;\n}\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport store from './store';\n\nconst TodoItem = ({ todo, todos, settodos }) => {\n  const status = (todo.completed) ? 'done' : 'in progress';\n\n  const deleteItem = (id) => {\n    const filteredTodos = todos[0].filter(todos => todos.id !== id);\n    const usersFromColection = todos[1];\n\n    settodos([filteredTodos, usersFromColection]);\n  };\n\n  return (\n    <tr className=\"row\">\n      <td className=\"rowOfTasks\">{todo.id}</td>\n      <td className=\"rowOfTasks\">{todo.title}</td>\n      <User user={todo.user} />\n      <td className=\"rowOfTasks last_cell\">\n        {status}\n        <button\n          type=\"button\"\n          className=\"delete_button\"\n          onClick={() => (\n            deleteItem(todo.id)\n          )}\n        >\n          x\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst setmapStateToProps = () => ({\n  settodos: newSetData => store.dispatch({\n    type: 'CHANGE_ROW',\n    todos: newSetData,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.any).isRequired,\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  settodos: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, setmapStateToProps)(TodoItem);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = props => (\n  <table>\n    <thead>\n      <tr className=\"head\">\n        <td>ID</td>\n        <td>Title</td>\n        <td>User name</td>\n        <td>Status</td>\n      </tr>\n    </thead>\n    <tbody>\n      {props.todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default TodoList;\n","function getTodosWithUsers(todos, users) {\n  return (todos.map(todo => (\n    {\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }\n  )));\n}\n\nexport default getTodosWithUsers;\n","const getUrl = URL => fetch(URL)\n  .then(todolist => todolist.json());\n\nexport default getUrl;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport getTodosWithUsers from './GetTodosWithUsers';\nimport store from './store';\nimport getURL from './api/getUrl';\n\nfunction Main({ todos, settodos }) {\n  const [loaded, setLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const preparedTodos\n  = getTodosWithUsers(todos[0], todos[1]);\n\n  const LoadTodos = async() => {\n    setIsLoading(true);\n\n    const [usersObject, todosObject]\n    = await Promise.all([\n      getURL('https://jsonplaceholder.typicode.com/users'),\n      getURL('https://jsonplaceholder.typicode.com/todos'),\n    ]);\n\n    settodos([todosObject, usersObject]);\n    setIsLoading(false);\n    setLoaded(true);\n  };\n\n  if (isLoading === true) {\n    return (\n      <div className=\"App\">\n        <p> ...LOADING </p>\n      </div>\n    );\n  }\n\n  if (loaded === false) {\n    return (\n      <div className=\"App\">\n        <button type=\"button\" onClick={LoadTodos}>\n          Load\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst dataMethods = () => ({\n  settodos: newtodos => store.dispatch({\n    type: 'CHANGE_ROW',\n    todos: newtodos,\n  }),\n});\n\nMain.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  settodos: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, dataMethods)(Main);\n","import React from 'react';\nimport './App.css';\n\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
