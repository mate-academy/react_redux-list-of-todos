{"version":3,"sources":["store/action.js","store/reducers.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Dropdown/Dropdown.js","App.js","index.js"],"names":["ACTION_TYPES","LOAD_TODOS","SET_FILTER_PATTERN","SET_ERROR_MESSAGE","loadTodos","todos","type","payload","setFilterPattern","pattern","setErrorMessage","error","store","createStore","state","action","filterPattern","devToolsEnhancer","User","name","username","email","userName","split","userFirstName","splice","className","join","TodoItem","title","completed","user","useLink","init","useState","value","set","connect","$todos","$pattern","useEffect","sort","a","b","id","map","todo","key","Dropdown","isOpen","handleDropdownToggle","setState","handleDropdownSelect","e","dispatch","target","dataset","this","props","itemsList","data-toggle","aria-haspopup","aria-expanded","onClick","classNames","show","aria-labelledby","item","shortid","generate","data-value","option","Component","BASE_URL","DROPDOWN_LIST","App","isLoaded","isLoading","errorMessage","onLoadClick","Promise","all","fetch","todosResponse","usersResponse","ok","Error","json","users","find","userId","message","loaderButton","disabled","role","aria-hidden","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ee3929c.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  LOAD_TODOS: 'LOAD::TODOS',\n  SET_FILTER_PATTERN: 'SET::FILTER::PATTERN',\n  SET_ERROR_MESSAGE: 'ERROR::MESSAGE',\n};\n\nexport const loadTodos = (todos) => ({\n  type: ACTION_TYPES.LOAD_TODOS,\n  payload: todos,\n});\n\nexport const setFilterPattern = (pattern) => ({\n  type: ACTION_TYPES.SET_FILTER_PATTERN,\n  payload: pattern,\n});\n\nexport const setErrorMessage = (error) => ({\n  type: ACTION_TYPES.SET_ERROR_MESSAGE,\n  payload: error,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport {\n  ACTION_TYPES,\n  loadTodos,\n  setFilterPattern,\n  setErrorMessage,\n} from './action';\n\nfunction reducer(state, action) {\n  const {\n    LOAD_TODOS,\n    SET_FILTER_PATTERN,\n    SET_ERROR_MESSAGE,\n  } = ACTION_TYPES;\n\n  switch (action.type) {\n    case LOAD_TODOS: {\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    }\n\n    case SET_FILTER_PATTERN: {\n      return {\n        ...state,\n        filterPattern: action.payload,\n      };\n    }\n\n    case SET_ERROR_MESSAGE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  {\n    todos: [],\n    filterPattern: '',\n    error: null,\n  },\n  devToolsEnhancer(\n    loadTodos(),\n    setFilterPattern(),\n    setErrorMessage()\n  )\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nconst User = ({ name, username, email }) => {\n  const userName = name.split(' ');\n  const userFirstName = userName.splice(0, 1);\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__title\">{userFirstName}</p>\n      <p className=\"user__title user--nik\">{`'${username}'`}</p>\n      <p className=\"user__title\">{userName.join(' ')}</p>\n      <p className=\"user__title user--email\">{email}</p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoItem.scss';\nimport User from '../User/User';\n\nfunction TodoItem({\n  title, completed, user,\n}) {\n  return (\n    <div className=\"todo-item\">\n      <h2 className=\"todo-item__title\">{title}</h2>\n      <p className=\"todo-item__check\">{completed ? '\\u2713' : ''}</p>\n      <User {...user} />\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './TodoList.scss';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst useLink = (init) => {\n  const [value, set] = useState(init);\n\n  return { value, set };\n};\n\nconst TodoList = ({ todos, filterPattern }) => {\n  const $todos = useLink(todos);\n  const $pattern = useLink(filterPattern);\n\n  useEffect(() => {\n\n    if (filterPattern === '') {\n      $todos.set(todos);\n    } else {\n      $todos.set(todos.sort((a, b) => {\n        if (a[filterPattern] > b[filterPattern]) {\n          return 1;\n        }\n\n        if (a[filterPattern] < b[filterPattern]) {\n          return -1;\n        }\n\n        if (a.id > b.id) {\n          return 1;\n        }\n\n        if (a.id < b.id) {\n          return -1;\n        }\n        return 0;\n      }));\n      $pattern.set(filterPattern);\n    }\n  });\n\n  return (\n    <div className=\"todolist\">\n      {$todos.value.map((todo) => <TodoItem key={todo.id} {...todo} />)}\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  filterPattern: PropTypes.string.isRequired,\n};\n\nexport default connect(({ todos, filterPattern }) => ({\n  todos,\n  filterPattern,\n}))(TodoList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classname';\nimport shortid from 'shortid';\nimport { store } from '../../store/reducers';\nimport { setFilterPattern } from '../../store/action';\n\nimport './Dropdown.scss';\n\nexport default class Dropdown extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  handleDropdownToggle = () => {\n    this.setState(({ isOpen }) => ({\n      isOpen: !isOpen,\n    }));\n  };\n\n  handleDropdownSelect = (e) => {\n    this.setState({ isOpen: false });\n    store.dispatch(setFilterPattern(e.target.dataset.value));\n  };\n\n  render() {\n    const { title, itemsList } = this.props;\n\n    return (\n      <div className=\"dropdown\">\n        <button\n          className=\"btn btn-secondary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onClick={this.handleDropdownToggle}\n        >\n          {title}\n        </button>\n        <div\n          className={classNames('dropdown-menu', {\n            show: this.state.isOpen,\n          })}\n          aria-labelledby=\"dropdownMenuButton\"\n        >\n          {itemsList.map((item) => (\n            <p\n              key={shortid.generate()}\n              className=\"dropdown-item\"\n              data-value={item.value}\n              onClick={this.handleDropdownSelect}\n            >\n              {item.option}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  title: PropTypes.string.isRequired,\n  itemsList: PropTypes.arrayOf(PropTypes.shape({\n    option: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\nimport Dropdown from './components/Dropdown/Dropdown';\n\nimport { store } from './store/reducers';\nimport { loadTodos, setErrorMessage } from './store/action';\n\nconst BASE_URL = `https://jsonplaceholder.typicode.com`;\nconst DROPDOWN_LIST = [\n  {\n    option: 'Title',\n    value: 'title',\n  },\n  {\n    option: 'User',\n    value: 'userName',\n  },\n  {\n    option: 'Status',\n    value: 'completed',\n  },\n];\n\nexport default class App extends Component {\n  state = {\n    isLoaded: false,\n    isLoading: false,\n    errorMessage: null,\n  };\n\n  componentDidMount() {\n    store.subscribe(() => this.setState({\n      errorMessage: store.getState().error,\n    }));\n  }\n\n  onLoadClick = async() => {\n    this.setState({ isLoading: true });\n\n    try {\n      const [todosResponse, usersResponse] = await Promise.all([\n        fetch(`${BASE_URL}/todos`),\n        fetch(`${BASE_URL}/users`),\n      ]);\n\n      if (!todosResponse.ok) {\n        throw new Error('ToDo list fetch is broken');\n      }\n\n      if (!usersResponse.ok) {\n        throw new Error('User list fetch is broken');\n      }\n\n      const todos = await todosResponse.json();\n      const users = await usersResponse.json();\n\n      store.dispatch(loadTodos(todos\n        .map((todo) => ({\n          ...todo,\n          user: users.find((item) => item.id === todo.userId),\n        }))\n        .map((todo) => ({\n          ...todo,\n          userName: todo.user.name,\n        }))));\n    } catch (error) {\n      store.dispatch(setErrorMessage(error.message));\n    }\n\n    this.setState({\n      isLoaded: true,\n      isLoading: false,\n    });\n  };\n\n  loaderButton = () => (this.state.isLoading\n    ? (\n      <button className=\"btn btn-primary\" type=\"button\" disabled>\n        <span\n          className=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n        Loading...\n      </button>\n    )\n    : (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => this.onLoadClick()}\n      >\n        Load\n      </button>\n    )\n  );\n\n  render() {\n    const { isLoaded, errorMessage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <h2 className=\"error-message\">{errorMessage}</h2>\n\n        {isLoaded\n          ? (\n            <>\n              <Dropdown\n                title=\"Sort by\"\n                itemsList={DROPDOWN_LIST}\n              />\n              <TodoList />\n            </>\n          )\n          : this.loaderButton()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/reducers';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}