{"version":3,"sources":["todosApi.js","store.js","User.js","TodoItem.js","TodoList.js","index.js"],"names":["getTodos","todoData","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsers","userData","_context2","getTodosFromServer","todos","type","getUsersFromServer","users","prepareTodos","preparedTodos","getIsloading","state","isLoading","getisShown","isShown","getTodosWithUsers","filteredTodos","store","createStore","arguments","length","undefined","action","Object","objectSpread2","filter","todo","id","isSorting","title","toConsumableArray","sort","b","localeCompare","completed","user","name","composeWithDevTools","applyMiddleware","thunk","User","_ref","react_default","createElement","Fragment","propTypes","PropTypes","objectOf","any","isRequired","connect","dispatch","onDeleteTodo","deleteTodo","className","cn","done","undone","src_User","onClick","loadTodosWithUsers","map","find","person","userId","sortTitle","sortByTitle","sortUser","sortByUser","sortId","sortById","sortStatus","sortByStatus","sortList","callback","key","src_TodoItem","ReactDOM","render","es","src_TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.9c4584b4.chunk.js","sourcesContent":["const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodos = async() => {\n  const todoData = await fetch(todosUrl);\n\n  return todoData.json();\n};\n\nexport const getUsers = async() => {\n  const userData = await fetch(usersUrl);\n\n  return userData.json();\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getTodos, getUsers } from './todosApi';\n\nconst START_LOADING = 'START_LOADING';\nconst GET_TODOS = 'GET_TODOS';\nconst GET_USERS = 'GET_USERS';\nconst PREPARE_TODOS = 'PREPARE_TODOS';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SORT_BY_ID = 'SORT_BY_ID';\nconst SORT_BY_TITLE = 'SORT_BY_TITLE';\nconst SORT_BY_STATUS = 'SORT_BY_STATUS';\nconst SORT_BY_USER = 'SORT_BY_USER';\n\nexport const sortByTitle = title => ({\n  type: SORT_BY_TITLE,\n  title,\n});\nexport const sortById = title => ({\n  type: SORT_BY_ID,\n  title,\n});\nexport const sortByUser = title => ({\n  type: SORT_BY_USER,\n  title,\n});\nexport const sortByStatus = title => ({\n  type: SORT_BY_STATUS,\n  title,\n});\nexport const startLoading = () => ({ type: START_LOADING });\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const getTodosFromServer = todos => ({\n  type: GET_TODOS,\n  todos,\n});\nexport const getUsersFromServer = users => ({\n  type: GET_USERS,\n  users,\n});\nexport const prepareTodos = preparedTodos => ({\n  type: PREPARE_TODOS,\n  preparedTodos,\n});\n\nexport const getIsloading = state => state.isLoading;\nexport const getisShown = state => state.isShown;\nexport const getTodosWithUsers = state => state.filteredTodos;\n\nexport const loadPreparedTodos = () => async(dispatch) => {\n  await dispatch(startLoading());\n\n  const todos = await getTodos();\n  const users = await getUsers();\n  const preparedTodos = await todos.map((todo) => {\n    const user = users.find(person => person.id === todo.userId);\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  dispatch(getTodosFromServer(todos));\n  dispatch(getUsersFromServer(users));\n  dispatch(prepareTodos(preparedTodos));\n};\n\nconst initialState = {\n  todos: [],\n  users: [],\n  isLoading: false,\n  isShown: true,\n  isSorting: 'id',\n  preparedTodos: [],\n  filteredTodos: [],\n};\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n    case PREPARE_TODOS:\n      return {\n        ...state,\n        preparedTodos: action.preparedTodos,\n        filteredTodos: action.preparedTodos,\n        isLoading: false,\n        isShown: false,\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        filteredTodos:\n          state.filteredTodos.filter(todo => todo.id !== action.id),\n        preparedTodos:\n          state.preparedTodos.filter(todo => todo.id !== action.id),\n\n      };\n    case SORT_BY_TITLE:\n      return state.isSorting !== action.title\n        ? {\n          ...state,\n          filteredTodos:\n          [...state.preparedTodos]\n            .sort((a, b) => a.title.localeCompare(b.title)),\n          isSorting: action.title,\n        }\n        : {\n          ...state,\n          filteredTodos:\n          [...state.preparedTodos]\n            .sort((a, b) => b.title.localeCompare(a.title)),\n          isSorting: '',\n        };\n    case SORT_BY_ID:\n      return state.isSorting !== action.title\n        ? {\n          ...state,\n          filteredTodos:\n              [...state.preparedTodos]\n                .sort((a, b) => a.id - b.id),\n          isSorting: action.title,\n        }\n        : {\n          ...state,\n          filteredTodos:\n              [...state.preparedTodos]\n                .sort((a, b) => b.id - a.id),\n          isSorting: '',\n        };\n    case SORT_BY_STATUS:\n      return state.isSorting !== action.title\n        ? {\n          ...state,\n          filteredTodos:\n                  [...state.preparedTodos]\n                    .sort((a, b) => a.completed - b.completed),\n          isSorting: action.title,\n        }\n        : {\n          ...state,\n          filteredTodos:\n                  [...state.preparedTodos]\n                    .sort((a, b) => b.completed - a.completed),\n          isSorting: '',\n        };\n    case SORT_BY_USER:\n      return state.isSorting !== action.title\n        ? {\n          ...state,\n          filteredTodos:\n              [...state.preparedTodos]\n                .sort((a, b) => a.user.name.localeCompare(b.user.name)),\n          isSorting: action.title,\n        }\n        : {\n          ...state,\n          filteredTodos:\n              [...state.preparedTodos]\n                .sort((a, b) => b.user.name.localeCompare(a.user.name)),\n          isSorting: '',\n        };\n    default: return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => <>{user.name}</>;\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport { deleteTodo } from './store';\n\nconst TodoItem = ({ todo, onDeleteTodo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td className={cn(\n      { done: todo.completed },\n      { undone: !todo.completed },\n    )}\n    >\n      {todo.completed ? 'finished' : 'not finished'}\n    </td>\n    <td><User user={todo.user} /></td>\n    <td>\n      <button\n        type=\"button\"\n        className=\"button button--delete\"\n        onClick={() => onDeleteTodo(todo.id)}\n      >\n          x\n      </button>\n    </td>\n  </tr>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteTodo: id => dispatch(deleteTodo(id)),\n});\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Main.css';\nimport TodoItem from './TodoItem';\nimport {\n  loadPreparedTodos,\n  getIsloading,\n  getisShown,\n  getTodosWithUsers,\n  sortByTitle,\n  sortByUser,\n  sortById,\n  sortByStatus,\n} from './store';\n\nconst TodoList = ({\n  isLoading,\n  isShown,\n  filteredTodos,\n  loadTodosWithUsers,\n  sortTitle,\n  sortUser,\n  sortId,\n  sortStatus,\n}) => {\n  const getPreparedTodos = async() => {\n    await loadTodosWithUsers();\n  };\n  const sortList = [\n    {\n      title: 'id', callback: sortId,\n    },\n    {\n      title: 'title', callback: sortTitle,\n    },\n    {\n      title: 'status', callback: sortStatus,\n    },\n    {\n      title: 'user', callback: sortUser,\n    },\n    {\n      title: 'delete',\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {\n        isShown ? (\n          <button\n            className=\"button button--init\"\n            type=\"button\"\n            onClick={() => {\n              getPreparedTodos();\n            }}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        ) : (\n          <>\n            <table>\n              <thead>\n                <tr>\n                  {sortList.map(sort => (\n                    sort.title !== 'delete' ? (\n                      <th\n                        onClick={() => sort.callback(sort.title)}\n                        key={sort.title}\n                      >\n                        {sort.title}\n                      </th>\n                    ) : (\n                      <th\n                        key={sort.title}\n                      >\n                        {sort.title}\n                      </th>\n                    )\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {filteredTodos.map(todo => (\n                  <TodoItem\n                    todo={todo}\n                    key={todo.id}\n                  />\n                ))}\n              </tbody>\n\n            </table>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: getIsloading(state),\n  isShown: getisShown(state),\n  filteredTodos: getTodosWithUsers(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadTodosWithUsers: () => dispatch(loadPreparedTodos()),\n  sortTitle: title => dispatch(sortByTitle(title)),\n  sortUser: title => dispatch(sortByUser(title)),\n  sortId: title => dispatch(sortById(title)),\n  sortStatus: title => dispatch(sortByStatus(title)),\n});\n\nTodoList.propTypes = {\n  isShown: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  filteredTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loadTodosWithUsers: PropTypes.func.isRequired,\n  sortTitle: PropTypes.func.isRequired,\n  sortUser: PropTypes.func.isRequired,\n  sortId: PropTypes.func.isRequired,\n  sortStatus: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport TodoList from './TodoList';\n\nReactDOM.render(\n  <Provider store={store}><TodoList /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}