{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","store/action.js","store/reducers.js","components/TodoList/TodoList.js","components/Dropdown/Dropdown.js","App.js","index.js"],"names":["User","name","username","email","userName","split","userFirstName","splice","className","join","TodoItem","title","completed","user","ACTION_TYPES","LOAD_TODOS","SET_FILTER_PATTERN","SET_ERROR_MESSAGE","loadTodos","todos","type","payload","setFilterPattern","pattern","dataFetch","todosUrl","usersUrl","a","Promise","all","fetch","todosResponse","usersResponse","ok","Error","json","users","store","dispatch","error","message","createStore","state","action","filterPattern","devToolsEnhancer","TodoList","$todos","useState","value","set","useTodos","getState","$pattern","usePattern","useEffect","subscribe","sort","b","id","map","todo","key","Dropdown","isOpen","handleDropdownToggle","setState","handleDropdownSelect","e","target","dataset","this","props","itemsList","data-toggle","aria-haspopup","aria-expanded","onClick","classNames","show","aria-labelledby","item","shortid","generate","data-value","option","Component","BASE_URL","DROPDOWN_LIST","App","isLoaded","isLoading","errorMessage","onLoadClick","then","find","userId","loaderButton","disabled","role","aria-hidden","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e19343a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nconst User = ({ name, username, email }) => {\n  const userName = name.split(' ');\n  const userFirstName = userName.splice(0, 1);\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__title\">{userFirstName}</p>\n      <p className=\"user__title user--nik\">{`'${username}'`}</p>\n      <p className=\"user__title\">{userName.join(' ')}</p>\n      <p className=\"user__title user--email\">{email}</p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoItem.scss';\nimport User from '../User/User';\n\nfunction TodoItem({\n  title, completed, user,\n}) {\n  return (\n    <div className=\"todo-item\">\n      <h2 className=\"todo-item__title\">{title}</h2>\n      <p className=\"todo-item__check\">{completed ? '\\u2713' : ''}</p>\n      <User {...user} />\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","export const ACTION_TYPES = {\n  LOAD_TODOS: 'LOAD::TODOS',\n  SET_FILTER_PATTERN: 'SET::FILTER::PATTERN',\n  SET_ERROR_MESSAGE: 'ERROR::MESSAGE',\n};\n\nexport const loadTodos = (todos) => ({\n  type: ACTION_TYPES.LOAD_TODOS,\n  payload: todos,\n});\n\nexport const setFilterPattern = (pattern) => ({\n  type: ACTION_TYPES.SET_FILTER_PATTERN,\n  payload: pattern,\n});\n\nexport const setErrorMessage = (error) => ({\n  type: ACTION_TYPES.SET_ERROR_MESSAGE,\n  payload: error,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport {\n  ACTION_TYPES,\n  loadTodos,\n  setFilterPattern,\n  setErrorMessage,\n} from './action';\n\nexport const dataFetch = async(todosUrl, usersUrl) => {\n  try {\n    const [todosResponse, usersResponse] = await Promise.all([\n      fetch(todosUrl),\n      fetch(usersUrl),\n    ]);\n\n    if (!todosResponse.ok) {\n      throw new Error('ToDo list fetch is broken');\n    }\n\n    if (!usersResponse.ok) {\n      throw new Error('User list fetch is broken');\n    }\n\n    const todos = await todosResponse.json();\n    const users = await usersResponse.json();\n\n    return ({\n      todos,\n      users,\n    });\n  } catch (error) {\n    store.dispatch(setErrorMessage(error.message));\n  }\n};\n\nfunction reducer(state, action) {\n  const {\n    LOAD_TODOS,\n    SET_FILTER_PATTERN,\n    SET_ERROR_MESSAGE,\n  } = ACTION_TYPES;\n\n  switch (action.type) {\n    case LOAD_TODOS: {\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    }\n\n    case SET_FILTER_PATTERN: {\n      return {\n        ...state,\n        filterPattern: action.payload,\n      };\n    }\n\n    case SET_ERROR_MESSAGE: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  {\n    todos: [],\n    filterPattern: '',\n    error: null,\n  },\n  devToolsEnhancer(loadTodos(), setFilterPattern())\n);\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\n\nimport './TodoList.scss';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { store } from '../../store/reducers';\n\nconst useTodos = ({ todos }) => {\n  const [value, set] = useState(todos);\n\n  return { value, set };\n};\n\nconst usePattern = ({ filterPattern }) => {\n  const [value, set] = useState(filterPattern);\n\n  return { value, set };\n};\n\nconst TodoList = () => {\n  const $todos = useTodos(store.getState());\n  const $pattern = usePattern(store.getState());\n\n  useEffect(() => {\n    store.subscribe(() => {\n      const { todos, filterPattern } = store.getState();\n\n      if (filterPattern === '') {\n        $todos.set(todos);\n      } else {\n        $todos.set(todos.sort((a, b) => {\n          if (a[filterPattern] > b[filterPattern]) {\n            return 1;\n          }\n\n          if (a[filterPattern] < b[filterPattern]) {\n            return -1;\n          }\n\n          if (a.id > b.id) {\n            return 1;\n          }\n\n          if (a.id < b.id) {\n            return -1;\n          }\n          return 0;\n        }));\n        $pattern.set(filterPattern);\n      }\n    });\n  });\n\n  return (\n    <div className=\"todolist\">\n      {$todos.value.map((todo) => <TodoItem key={todo.id} {...todo} />)}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classname';\nimport shortid from 'shortid';\nimport { store } from '../../store/reducers';\nimport { setFilterPattern } from '../../store/action';\n\nimport './Dropdown.scss';\n\nexport default class Dropdown extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  handleDropdownToggle = () => {\n    this.setState(({ isOpen }) => ({\n      isOpen: !isOpen,\n    }));\n  };\n\n  handleDropdownSelect = (e) => {\n    this.setState({ isOpen: false });\n    store.dispatch(setFilterPattern(e.target.dataset.value));\n  };\n\n  render() {\n    const { title, itemsList } = this.props;\n\n    return (\n      <div className=\"dropdown\">\n        <button\n          className=\"btn btn-secondary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onClick={this.handleDropdownToggle}\n        >\n          {title}\n        </button>\n        <div\n          className={classNames('dropdown-menu', {\n            show: this.state.isOpen,\n          })}\n          aria-labelledby=\"dropdownMenuButton\"\n        >\n          {itemsList.map((item) => (\n            <p\n              key={shortid.generate()}\n              className=\"dropdown-item\"\n              data-value={item.value}\n              onClick={this.handleDropdownSelect}\n            >\n              {item.option}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  title: PropTypes.string.isRequired,\n  itemsList: PropTypes.arrayOf(PropTypes.shape({\n    option: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\nimport Dropdown from './components/Dropdown/Dropdown';\n\nimport { store, dataFetch } from './store/reducers';\nimport { loadTodos } from './store/action';\n\nconst BASE_URL = `https://jsonplaceholder.typicode.com`;\nconst DROPDOWN_LIST = [\n  {\n    option: 'Title',\n    value: 'title',\n  },\n  {\n    option: 'User',\n    value: 'userName',\n  },\n  {\n    option: 'Status',\n    value: 'completed',\n  },\n];\n\nexport default class App extends Component {\n  state = {\n    isLoaded: false,\n    isLoading: false,\n    errorMessage: null,\n  };\n\n  componentDidMount() {\n    store.subscribe(() => this.setState({\n      errorMessage: store.getState().error,\n    }));\n  }\n\n  onLoadClick = () => {\n    this.setState({ isLoading: true });\n\n    dataFetch( `${BASE_URL}/todos`, `${BASE_URL}/users`)\n      .then(({ todos, users }) => {\n        store.dispatch(loadTodos(todos\n          .map((todo) => ({\n            ...todo,\n            user: users.find((item) => item.id === todo.userId),\n          }))\n          .map((todo) => ({\n            ...todo,\n            userName: todo.user.name,\n          }))));\n\n        this.setState({\n          isLoaded: true,\n          isLoading: false,\n        });\n      });\n  };\n\n  loaderButton = () => (this.state.isLoading\n    ? (\n      <button className=\"btn btn-primary\" type=\"button\" disabled>\n        <span\n          className=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n        Loading...\n      </button>\n    )\n    : (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => this.onLoadClick()}\n      >\n        Load\n      </button>\n    )\n  );\n\n  render() {\n    const { isLoaded, errorMessage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <h2 className=\"error-message\">{errorMessage}</h2>\n\n        {isLoaded\n          ? (\n            <>\n              <Dropdown\n                title=\"Sort by\"\n                itemsList={DROPDOWN_LIST}\n              />\n              <TodoList />\n            </>\n          )\n          : this.loaderButton()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}