{"version":3,"sources":["store/index.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","api/data.js","App.js","index.js"],"names":["ACTION_TYPES","LOADING","LOADED","GET_TODOS","loading","type","loaded","getTodosWithUsers","todos","users","initialState","isLoading","isLoaded","store","createStore","state","arguments","length","undefined","action","_objectSpread","map","todo","user","find","item","id","userId","Users","_ref","name","username","email","react_default","a","createElement","className","TodoItem","style","width","title","User_Users","completed","TodoList","getState","TodoItem_TodoItem_TodoItem","key","getData","url","fetch","then","response","json","TODOS_API_URL","USERS_API_URL","App","dispatch","Promise","all","_ref2","Object","slicedToArray","_this2","this","unsubscribe","subscribe","setState","_store$getState","onClick","role","TodoList_TodoList_TodoList","React","Component","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7f7e42b5.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\n// action types\nconst ACTION_TYPES = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  GET_TODOS: 'GET_TODOS',\n};\n\n// action creators\nexport const loading = () => ({\n  type: ACTION_TYPES.LOADING,\n});\n\nexport const loaded = () => ({\n  type: ACTION_TYPES.LOADED,\n});\n\nexport const getTodosWithUsers = (todos, users) => ({\n  type: ACTION_TYPES.GET_TODOS,\n  todos,\n  users,\n});\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isLoaded: false,\n};\n\nfunction reducer(state = initialState, action={}) {\n  switch (action.type) {\n    case ACTION_TYPES.LOADING: {\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    }\n    case ACTION_TYPES.LOADED: {\n      return {\n        ...state,\n        isLoaded: !state.isLoaded,\n      };\n    }\n    case ACTION_TYPES.GET_TODOS: {\n      return {\n        ...state,\n        todos: action.todos.map(todo => ({\n          ...todo,\n          user: action.users.find(item => item.id === todo.userId),\n        })),\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nexport const Users = ({ name, username, email }) => (\n  <div className=\"card-title\">\n    <h5>User information:</h5>\n    <ul>\n      <li>{name}</li>\n      <li>{username}</li>\n      <li>{email}</li>\n    </ul>\n  </div>\n);\n\nUsers.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoItem.css';\n\nimport { Users } from '../User/User';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo }) => (\n  <div className=\"card\" style={{ width: '18rem'}}>\n    <h3 className=\"task\">{ todo.title }</h3>\n    <Users {...todo.user} />\n    <h6 className=\"card-subtitle mb-2 text-muted\">\n      { todo.completed ? '\\u2714' : '\\u2718' }\n    </h6>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      username: PropTypes.string,\n      email: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoList.css';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { store } from '../../store';\n\nexport const TodoList = () => (\n  <div>\n    <div className=\"list-cards\">\n      {store.getState().todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </div>\n  </div>\n);\n","export const getData = url => fetch(url).then(response => response.json());\n","import React from 'react';\nimport './App.css';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport {\n  store, getTodosWithUsers, loading, loaded,\n} from './store';\nimport { getData } from './api/data';\n\nconst TODOS_API_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\n\nclass App extends React.Component {\n  state = {\n    todos: store.getState().todos,\n  };\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => this.setState({\n      todos: store.getState().todos,\n    }));\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getData = () => {\n    store.dispatch(loading());\n    Promise.all([getData(TODOS_API_URL), getData(USERS_API_URL)]).then(\n      ([todos, users]) => {\n        store.dispatch(loading());\n        store.dispatch(getTodosWithUsers(todos, users));\n        store.dispatch(loaded());\n      }\n    );\n  };\n\n  render() {\n    const { todos, isLoading, isLoaded } = store.getState();\n    return (\n      <div className=\"main\">\n        <h1>Static list of todos</h1>\n        {!todos.length && !isLoading && (\n          <button\n            type=\"button\"\n            onClick={this.getData}\n            className=\"btn btn-outline-dark\"\n          >\n            Load todos\n          </button>\n        )}\n        { isLoading && (\n          <div className=\"spinner-grow text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        )}\n        {isLoaded && (\n          <TodoList />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}