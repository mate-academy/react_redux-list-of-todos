{"version":3,"sources":["TodoItem.js","TodoList.js","Get.js","store.js","App.js","index.js"],"names":["TodoItem","_ref","todoData","handleTodoDelete","react_default","a","createElement","className","user","name","title","completed","onClick","id","TodoList","data","map","element","src_TodoItem","key","Math","random","API_URL","getFromServer","Object","asyncToGenerator","regenerator_default","mark","_callee","responseTodos","todos","responseUsers","users","userWithTodo","wrap","_context","prev","next","fetch","concat","sent","json","todo","_objectSpread","find","userId","abrupt","stop","apply","this","arguments","getUnitedData","state","unitedData","getIsLoaded","isLoaded","getIsLoading","isLoading","store","createStore","action","type","store_objectSpread","value","sort","b","String","localeCompare","filter","composeWithDevTools","App","handleLoad","_this$props","setTodos","_this","props","getLoading","sortData","event","target","_this$props2","sortByName","sortByValue","forceUpdate","deleteTodo","defaultValue","onChange","src_TodoList","disabled","React","Component","connect","dispatch","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.583f7251.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todoData, handleTodoDelete }) => (\n  <div className=\"todoitem\">\n    <ul> <b>Name: </b>\n      <li className=\"user_user-name\">\n        {todoData.user.name}\n      </li>\n   </ul>\n   <ul>\n    <b>Title: </b>\n      <li className=\"todoitem_title\">\n        {todoData.title}\n      </li>\n    </ul>\n    <ul className=\"status\">\n      <b>Status: </b>\n      {!todoData.completed\n      ? <li className=\"progress\">\n          IN PROGRESS...\n        </li>\n      : <li className=\"done\">\n          DONE!\n        </li>}\n      <ul className=\"delete\">\n        <li className=\"todoitem_buttom\">\n          <button\n            className=\"delete\"\n            onClick={() => handleTodoDelete(todoData.id)}\n          >\n          delete\n          </button>\n        </li>\n      </ul>\n    </ul>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todoData: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ data, handleTodoDelete }) => (\n<div className=\"todolist-table\">\n  {data.map(element => (\n    <TodoItem\n      key={Math.random()}\n      todoData={element}\n      handleTodoDelete={handleTodoDelete}\n    />\n  ))}\n</div>\n);\nTodoList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst getFromServer = async() => {\n  const responseTodos = await fetch(`${API_URL}/todos`);\n  const todos = await responseTodos.json();\n\n  const responseUsers = await fetch(`${API_URL}/users`);\n  const users = await responseUsers.json();\n\n  const userWithTodo = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  })\n  );\n  return userWithTodo;\n};\n\nexport default getFromServer;\n","import {createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//constants\n\nconst GET_ISLOADING = 'GET_ISLOADING';\nconst SET_TODOS = 'SET_TODOS';\nconst SORT_BY_NAME = 'SORT_BY_NAME';\nconst SORT_BY_VALUE = 'SORT_BY_VALUE';\nconst DELETE_TODO = 'DELETE_TODO';\n\nconst initialState = {\n  unitedData: [],\n  isLoaded: false,\n  isLoading: false,\n};\n\n// action creators\n\nexport const getLoading = () => ({ type: GET_ISLOADING });\nexport const setTodos = (value) => ({ type: SET_TODOS, value })\nexport const sortByName = () => ({ type: SORT_BY_NAME })\nexport const sortByValue = (value) => ({ type: SORT_BY_VALUE, value })\nexport const deleteTodo =(value) => ({ type: DELETE_TODO, value })\n\n// reducer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_ISLOADING':\n      return {\n         ...state,\n        isLoading: true,\n      };\n    case 'SET_TODOS':\n      return {\n        ...state,\n        unitedData: action.value,\n        isLoading: false,\n        isLoaded: true,\n      }\n    case 'SORT_BY_NAME':\n      return {\n        ...state,\n        unitedData: state.unitedData.sort((a, b) =>\n          String(a.user.name).localeCompare(String(b.user.name))),\n      }\n    case 'SORT_BY_VALUE':\n      return {\n        ...state,\n        unitedData: state.unitedData.sort((a, b) =>\n          String(a[action.value]).localeCompare(String(b[action.value]))),\n      }\n    case 'DELETE_TODO':\n      return {\n        ...state,\n        unitedData: state.unitedData.filter(todo => todo.id !== action.value)\n      }\n      default:\n        return state;\n  }\n};\n\n// selectors\n\nexport const getUnitedData = state => state.unitedData;\nexport const getIsLoaded = state => state.isLoaded;\nexport const getIsLoading = state => state.isLoading;\n\n\n// store\n\nconst store = createStore(reducer, initialState, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './Styles/App.css';\nimport TodoList from './TodoList';\nimport getFromServer from './Get';\n\nimport { getUnitedData, setTodos, getLoading, getIsLoading, getIsLoaded, sortByName, sortByValue, deleteTodo } from './store';\n\n class App extends React.Component {\n\n  handleLoad = async() => {\n    const {setTodos, getLoading} = this.props;\n    getLoading()                                // store.dispatch(getLoading())  - аналогично работающий код\n    const userWithTodo = await getFromServer();\n    setTodos(userWithTodo)                      // store.dispatch({type: 'GET_TODOS', value: userWithTodo}) - аналогично работающий код\n  };\n\n  sortData = (event) => {\n    const {value} = event.target;\n    const {sortByName, sortByValue} = this.props;\n    if (value === 'name') {\n      sortByName();\n    }\n    else {\n      sortByValue(value);\n    }\n    this.forceUpdate()\n  };\n\n  handleTodoDelete = (value) => {\n    this.props.deleteTodo(value)\n  };\n\n  render() {\n    if (!this.props.isLoaded) {\n      return (\n        <button\n          type=\"button\"\n          className=\"load-button\"\n          onClick={this.handleLoad}\n          disabled={this.props.isLoading}\n        >\n          {this.props.isLoading ? 'Loading...' : 'Load'}\n        </button>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h1 className=\"app-title\">Dynamic list of todos</h1>\n          <select\n            className=\"app-select\"\n            defaultValue=\"this.state.value\"\n            onChange={this.sortData}\n          >\n            <option value=\"\" >Sort by: </option>\n            <option value=\"name\" >User </option>\n            <option value=\"title\" >Title </option>\n            <option value=\"completed\" >Status </option>\n          </select>\n        </div>\n        <TodoList\n          data={this.props.unitedData}\n          handleTodoDelete={this.handleTodoDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst getData = state => ({\n  unitedData: getUnitedData(state),\n  isLoaded: getIsLoaded(state),\n  isLoading: getIsLoading(state),\n});\n\nconst getMetods = dispatch => ({\n  getLoading: () => dispatch(getLoading()),\n  setTodos: (value) => dispatch(setTodos(value)),\n  sortByName: () => dispatch(sortByName()),\n  sortByValue: (value) => dispatch(sortByValue(value)),\n  deleteTodo: (value) => dispatch(deleteTodo(value))\n});\n\nexport default connect(getData, getMetods) (App);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}