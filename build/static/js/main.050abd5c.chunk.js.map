{"version":3,"sources":["store/store.js","api.js","Components/User.js","Components/TodoItem.js","Components/TodoList.js","App.js","index.js"],"names":["actionTypes","createStore","state","action","type","Object","objectSpread2","isLoading","value","todos","filter","todo","id","todoId","getData","url","fetch","then","response","json","User","_ref","userData","react_default","a","createElement","name","connect","dispatch","deleteTodo","title","Components_User","user","className","completed","onClick","setTodos","newTodos","map","column","key","event","by","toConsumableArray","sort","b","localeCompare","sortTodos","target","innerText","Components_TodoItem","setLoading","length","_ref2","_ref3","todosFromServer","usersFromServer","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","slicedToArray","find","userId","t0","console","error","finish","stop","Components_TodoList","ReactDOM","render","es","store","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.050abd5c.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nexport const actionTypes = {\n  SET_LOADING: 'setLoading',\n  SET_TODOS: 'setTodos',\n  DELETE_TODO: 'deleteTodo',\n};\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n\n    case actionTypes.SET_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    case actionTypes.DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.todoId),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer, initialState);\n","const todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getData = url => fetch(url)\n  .then(response => response.json());\n\nexport const getTodos = () => getData(todosURL);\nexport const getUsers = () => getData(usersURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userData }) => (\n  <td>{userData.name}</td>\n);\n\nUser.propTypes = { userData: PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired };\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { actionTypes } from '../store/store';\nimport User from './User';\n\nconst TodoItem = ({ todo, deleteTodo }) => (\n  <tbody>\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <User userData={todo.user} />\n      <td\n        className={todo.completed ? 'completed' : 'not-completed'}\n      >\n        {todo.completed ? 'yes' : 'no'}\n      </td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={() => deleteTodo(todo.id)}\n        >\n          x\n        </button>\n      </td>\n    </tr>\n  </tbody>\n);\n\nconst getMethods = dispatch => ({\n  deleteTodo: todoId => dispatch({\n    type: actionTypes.DELETE_TODO,\n    todoId,\n  }),\n});\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default connect(() => ({}), getMethods)(TodoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { actionTypes } from '../store/store';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, setTodos }) => {\n  const sortTodos = (by) => {\n    switch (by) {\n      case 'user':\n        setTodos([...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n\n      case 'title':\n        setTodos([...todos].sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n\n      default:\n        setTodos([...todos].sort((a, b) => a[by] - b[by]));\n    }\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {['id', 'title', 'user', 'completed'].map(column => (\n            <th\n              key={column}\n              onClick={event => sortTodos(event.target.innerText)}\n            >\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </table>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: actionTypes.SET_TODOS,\n    todos: newTodos,\n  }),\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport { getTodos, getUsers } from './api';\nimport { actionTypes } from './store/store';\nimport TodoList from './Components/TodoList';\n\nconst App = ({ isLoading, setLoading, todos, setTodos }) => {\n  const loadTodosAndUsers = async() => {\n    setLoading(true);\n\n    try {\n      const [\n        todosFromServer,\n        usersFromServer,\n      ] = await Promise.all([getTodos(), getUsers()]);\n\n      setTodos(todosFromServer.map(todo => ({\n        ...todo,\n        user: usersFromServer.find(user => user.id === todo.userId),\n      })));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {isLoading && <h2>Loading...</h2>}\n      {!isLoading && (todos.length === 0 ? (\n        <button\n          type=\"button\"\n          onClick={loadTodosAndUsers}\n        >\n          Load\n        </button>\n      ) : (\n        <TodoList />\n      ))}\n    </div>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: actionTypes.SET_TODOS,\n    todos: newTodos,\n  }),\n  setLoading: value => dispatch({\n    type: actionTypes.SET_LOADING,\n    value,\n  }),\n});\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}