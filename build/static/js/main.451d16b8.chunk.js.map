{"version":3,"sources":["store/store.js","User.js","TodoItem.js","TodoList.js","index.js"],"names":["TYPES_SORT_TODOS","title","status","user","store","createStore","state","action","type","Object","objectSpread2","isLoading","hasError","combineData","toConsumableArray","filter","todo","id","sort","prev","next","localeCompare","completed","name","sortedList","User","_ref","email","website","react_default","a","createElement","Fragment","Card","Header","Meta","connect","dispatch","deleteTodo","rnd","Math","floor","random","src_User","Content","Image","floated","size","src","Description","style","color","extra","className","Button","basic","onClick","startLoading","handleError","handleSuccess","sortTodos","event","value","target","console","log","loadTodos","_ref2","_ref3","todosFromServer","usersFromServer","regenerator_default","async","_context","awrap","Promise","all","axios","get","catch","sent","slicedToArray","data","map","find","userId","stop","Container","length","Group","Or","Dimmer","active","Loader","Grid","columns","divided","Row","Column","key","src_TodoItem","content","icon","labelPosition","ReactDOM","render","es","src_TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.451d16b8.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst TODO_DELETE = 'TODO_DELETE';\nconst TYPES_SORT_TODOS = {\n  title: 'SORT_BY_TITLE',\n  status: 'SORT_BY_STATUS',\n  user: 'SORT_BY_USER',\n};\n\nexport const sortTodos = (event) => {\n  const { value } = event.target;\n\n  console.log(value);\n\n  return {\n    type: TYPES_SORT_TODOS[value],\n  };\n};\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const handleSuccess = combineData => ({\n  type: HANDLE_SUCCESS,\n  combineData,\n});\n\nexport const handleError = () => ({\n  type: HANDLE_ERROR,\n});\n\nexport const deleteTodo = id => ({\n  type: TODO_DELETE,\n  id,\n});\n\nconst initialState = {\n  combineData: [],\n  isLoading: false,\n  hasError: false,\n  sortedList: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        combineData: action.combineData,\n        isLoading: false,\n      };\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n    case TODO_DELETE:\n      return {\n        ...state,\n        combineData: [...state.combineData]\n          .filter(todo => todo.id !== action.id),\n      };\n    case TYPES_SORT_TODOS.title:\n      return {\n        ...state,\n        combineData: [...state.combineData]\n          .sort((prev, next) => (prev.title.localeCompare(next.title))),\n      };\n    case TYPES_SORT_TODOS.status:\n      return {\n        ...state,\n        combineData: [...state.combineData]\n          .sort((prev, next) => prev.completed - next.completed),\n      };\n    case TYPES_SORT_TODOS.user:\n      return {\n        ...state,\n        combineData: [...state.combineData]\n          .sort((prev, next) => (prev.user.name.localeCompare(next.user.name))),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\n\nconst User = ({ user }) => {\n  const { name, email, website } = user;\n\n  return (\n    <>\n      <Card.Header>{name}</Card.Header>\n      <Card.Meta>{email}</Card.Meta>\n      <Card.Meta>{website}</Card.Meta>\n    </>\n  );\n};\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    website: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport { deleteTodo } from './store/store';\nimport User from './User';\n\nconst TodoItem = ({ todo, deleteTodo }) => {  // eslint-disable-line\n  const { title, id, completed, user } = todo;\n  const img = [\n    'https://react.semantic-ui.com/images/avatar/large/steve.jpg',\n    'https://react.semantic-ui.com/images/avatar/large/molly.png',\n    'https://react.semantic-ui.com/images/avatar/large/jenny.jpg',\n    'https://react.semantic-ui.com/images/avatar/large/matthew.png',\n    'https://react.semantic-ui.com/images/avatar/small/matt.jpg',\n    'https://react.semantic-ui.com/images/avatar/small/joe.jpg',\n  ];\n  const rnd = Math.floor(Math.random() * (5));\n\n  return (\n\n    <Card>\n      <User user={user} />\n      <Card.Content>\n        <Image\n          floated=\"right\"\n          size=\"mini\"\n          src={img[rnd]}\n\n        />\n        <Card.Description>\n          <strong>{id}</strong>\n          <p>{title}</p>\n          <p style={completed\n            ? { color: 'green' }\n            : { color: 'red' }}\n          >\n            {completed\n              ? 'completed'\n              : 'not completed'}\n          </p>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className=\"ui two buttons\">\n          <Button basic color=\"green\">\n            Approve\n          </Button>\n          <Button onClick={() => deleteTodo(id)} basic color=\"red\">\n            DELETE\n          </Button>\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => ({\n  combineData: state.combineData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: id => dispatch(deleteTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Button,\n  Grid,\n  Container,\n  Dimmer,\n  Loader } from 'semantic-ui-react';\nimport {\n  startLoading,\n  handleError,\n  handleSuccess,\n  sortTodos,\n} from './store/store';\nimport 'semantic-ui-css/semantic.min.css';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({\n  combineData,\n  isLoading,\n  hasError,\n  startLoading,   // eslint-disable-line\n  handleError,   // eslint-disable-line\n  handleSuccess,  // eslint-disable-line\n  sortTodos,      // eslint-disable-line\n}) {\n  const loadTodos = async() => {\n    startLoading();\n\n    const [\n      todosFromServer,\n      usersFromServer,\n\n    ] = await Promise.all([\n      axios.get('https://jsonplaceholder.typicode.com/todos'),\n      axios.get('https://jsonplaceholder.typicode.com/users'),\n    ]).catch(() => {\n      handleError();\n    });\n\n    const combineData = todosFromServer.data.map(todo => ({    // eslint-disable-line\n      ...todo,\n      user: usersFromServer.data.find(user => user.id === todo.userId),\n    }));\n\n    handleSuccess(combineData);\n  };\n\n  return (\n    <Container className=\"App\">\n      {\n        (combineData.length > 0)\n          && (\n          <>\n            <Button.Group>\n              <Button value=\"title\" onClick={sortTodos}>SORT BY TITLE</Button>\n              <Button.Or />\n              <Button value=\"status\" onClick={sortTodos}>SORT BY STATUS</Button>\n              <Button.Or />\n              <Button value=\"user\" onClick={sortTodos}>SORT BY USER</Button>\n              <Button>\nNow is shown\n                {combineData.length}\n                {' '}\ntodos\n              </Button>\n              <Button onClick={loadTodos}>Reload all todos</Button>\n            </Button.Group>\n          </>\n          )\n      }\n\n      {isLoading\n      && (\n        <Dimmer active>\n          <Loader size=\"huge\">LOADING.....</Loader>\n        </Dimmer>\n      )}\n      {hasError\n      && (\n      <>\n        <p>Error</p>\n        <Button onClick={loadTodos}>Try Again</Button>\n      </>\n      )\n      }\n      {combineData.length === 0 && !hasError\n        ? (\n          <>\n            <p>No todos yet </p>\n            <Button\n              onClick={loadTodos}\n              content=\"Load\"\n              icon=\"right arrow\"\n              labelPosition=\"right\"\n            />\n          </>\n        )\n        : (\n          <Grid columns={3} divided>\n            <Grid.Row>\n\n              {combineData.map(todo => (\n                <Grid.Column key={todo.id}>\n                  <TodoItem todo={todo} />\n                </Grid.Column>\n              ))}\n\n            </Grid.Row>\n          </Grid>\n        )\n      }\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  combineData: state.combineData,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoading: () => dispatch(startLoading()),\n  handleError: () => dispatch(handleError()),\n  handleSuccess: combineData => dispatch(handleSuccess(combineData)),\n  sortTodos: event => dispatch(sortTodos(event)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nTodoList.propTypes = {\n  combineData: PropTypes.arrayOf(PropTypes.any).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  startLoading: PropTypes.func.isRequired,\n  handleSuccess: PropTypes.func.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport TodoList from './TodoList';\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoList />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}