{"version":3,"sources":["Components/User/User.js","Components/ToDoItem/ToDoItem.js","Components/ToDoList/ToDoList.js","store/index.js","api/getTodos.js","api/getUsers.js","Components/ToDoList/index.js","Components/App/App.js","Components/App/index.js","index.js"],"names":["User","_ref","name","username","email","react_default","a","createElement","className","ToDoItem","todo","completed","title","id","Components_User_User","user","ToDoList","todos","sortByStatus","sortByTitle","sortByUser","Fragment","type","onClick","map","item","Components_ToDoItem_ToDoItem","key","ACTION_TYPES","LOADING","GET_DATA","SORT_USER","SORT_STATUS","SORT_TITLE","loading","getData","data","payload","dataLoading","dispatch","store","Promise","all","fetch","then","response","json","userArr","_ref2","Object","slicedToArray","users","_objectSpread","find","userId","initialState","isLoading","createStore","state","arguments","length","undefined","action","toConsumableArray","sort","b","applyMiddleware","thunk","newToDoList","connect","App","newApp","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.a40edec8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nconst User = ({ name, username, email }) => (\n  <div className=\"user\">\n    <h1 className=\"user__name user__text\">{name}</h1>\n    <p className=\"user__username user__text\">{username}</p>\n    <p className=\"user__email user__text\">{email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport './ToDoItem.css';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst ToDoItem = ({ todo }) => (\n  <div className={todo.completed ? 'todoitem completed' : 'todoitem'}>\n    <ul className=\"todoitem-list\">\n      <li className=\"todoitem-list__item-title item\">{todo.title}</li>\n      <li className=\"todoitem-list__item-status item\">\n        {todo.completed ? '\\u2714' : '\\u2718'}\n      </li>\n      <li className=\"todoitem-list__item-id item\">{todo.id}</li>\n    </ul>\n    <User user={todo.user} />\n  </div>\n);\n\nToDoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport './ToDoList.css';\nimport PropTypes from 'prop-types';\nimport ToDoItem from '../ToDoItem/ToDoItem';\n\nconst ToDoList = ({\n  todos, sortByStatus, sortByTitle, sortByUser,\n}) => (\n  <>\n    <div className=\"buttons\">\n      <button type=\"button\" className=\"btn btn-info\" onClick={sortByTitle}>\n        {' '}\n        Sort by title\n      </button>\n      <button type=\"button\" className=\"btn btn-info\" onClick={sortByStatus}>\n        Sort by status\n      </button>\n      <button type=\"button\" className=\"btn btn-info\" onClick={sortByUser}>\n        {' '}\n        Sort by user\n      </button>\n    </div>\n    <div className=\"todolist\">\n      {todos.map(item => (\n        <ToDoItem todo={item} key={item.id} />\n      ))}\n    </div>\n  </>\n);\n\nToDoList.propTypes = {\n  todos: PropTypes.arrayOf({\n    todo: PropTypes.shape({\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      id: PropTypes.number,\n    }).isRequired,\n  }).isRequired,\n  sortByTitle: PropTypes.func.isRequired,\n  sortByStatus: PropTypes.func.isRequired,\n  sortByUser: PropTypes.func.isRequired,\n};\n\nexport default ToDoList;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getTodos } from '../api/getTodos';\nimport { getUsers } from '../api/getUsers';\n\nconst ACTION_TYPES = {\n  LOADING: 'LOADING',\n  GET_DATA: 'GET_DATA',\n  SORT_USER: 'SORT_USER',\n  SORT_STATUS: 'SORT_STATUS',\n  SORT_TITLE: 'SORT_TITLE',\n};\n\nexport const loading = () => ({\n  type: ACTION_TYPES.LOADING,\n});\n\nexport const getData = data => ({\n  type: ACTION_TYPES.GET_DATA,\n  payload: data,\n});\n\nexport const sortByUser = () => ({\n  type: ACTION_TYPES.SORT_USER,\n});\n\nexport const sortByStatus = () => ({\n  type: ACTION_TYPES.SORT_STATUS,\n});\n\nexport const sortByTitle = () => ({\n  type: ACTION_TYPES.SORT_TITLE,\n});\n\nconst getTodosWithUsers = (todoArr, userArr) => todoArr.map(todo => ({\n  ...todo,\n  user: userArr.find(item => item.id === todo.userId),\n}));\n\nexport const dataLoading = () => (dispatch) => {\n  store.dispatch(loading());\n  Promise.all([getTodos(), getUsers()]).then(([todos, users]) => {\n    store.dispatch(getData(getTodosWithUsers(todos, users)));\n    store.dispatch(loading());\n  });\n};\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.LOADING:\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n\n    case ACTION_TYPES.GET_DATA:\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    case ACTION_TYPES.SORT_USER:\n      return {\n        ...state,\n        todos: [...state.todos].sort((a, b) => (a.user.name - b.user.name === 1 ? 1 : -1)),\n      };\n\n    case ACTION_TYPES.SORT_STATUS:\n      return {\n        ...state,\n        todos: [...state.todos].sort((a, b) => (a.title - b.title === 1 ? 1 : -1)),\n      };\n\n    case ACTION_TYPES.SORT_TITLE:\n      return {\n        ...state,\n        todos: [...state.todos].sort((a, b) => (a.completed - b.completed === 1 ? 1 : -1)),\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","export const getTodos = () => fetch(`https://jsonplaceholder.typicode.com/todos`).then(response => response.json());\n","export const getUsers = () => fetch(`https://jsonplaceholder.typicode.com/users`).then(response => response.json());\n","import { connect } from 'react-redux';\nimport ToDoList from './ToDoList';\nimport { sortByUser, sortByTitle, sortByStatus } from '../../store';\n\nconst mapDispatchToProps = dispatch => ({\n  sortByUser: () => dispatch(sortByUser()),\n  sortByTitle: () => dispatch(sortByTitle()),\n  sortByStatus: () => dispatch(sortByStatus()),\n});\n\nconst newToDoList = connect(\n  ({ todos }) => ({ todos }),\n  mapDispatchToProps\n)(ToDoList);\n\nexport { newToDoList as ToDoList };\n","import React from 'react';\nimport './App.css';\nimport { ToDoList } from '../ToDoList';\n// import { store, loading, getData } from '../../store';\n\nconst App = ({ dataLoading, todos, isLoading }) => (\n  <div className=\"App\">\n    <h1>Dynamic list of todos</h1>\n    {todos.length === 0 ? (\n      <button type=\"button\" onClick={dataLoading} className=\"btn btn-info\">\n        {isLoading ? (\n          <span className=\"spinner-border spinner-border-sm\" />\n        ) : (\n          <span>Load</span>\n        )}\n        {' '}\n      </button>\n    ) : (\n      <ToDoList />\n    )}\n  </div>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport {\n  sortByUser,\n  sortByTitle,\n  sortByStatus,\n  loading,\n  getData,\n  dataLoading,\n} from '../../store/index';\n\nconst mapDispatchToProps = dispatch => ({\n  sortByUser: () => dispatch(sortByUser()),\n  sortByTitle: () => dispatch(sortByTitle()),\n  sortByStatus: () => dispatch(sortByStatus()),\n  loading: () => dispatch(loading()),\n  getData: () => dispatch(getData()),\n  dataLoading: () => dispatch(dataLoading()),\n});\n\nconst newApp = connect(\n  state => ({\n    todos: state.todos,\n    isLoading: state.isLoading,\n  }),\n  mapDispatchToProps\n)(App);\n\nexport { newApp as App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './Components/App';\nimport { store } from './store';\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}