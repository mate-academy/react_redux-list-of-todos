{"version":3,"sources":["redux/loading.js","redux/todosData.js","store.js","components/util/TodoApi.js","components/util/UserApi.js","components/user/User.js","components/todo-item/TodoItem.js","components/todo-list/TodoList.js","App.js","index.js"],"names":["loadingReducer","state","arguments","length","undefined","type","sortedTodosReducer","action","_state$initialTodos","initialTodos","_state$sortField","sortField","fieldDirection","newSortDirection","name","sortedTodos","todos","_objectSpread","Object","toConsumableArray","sort","a","b","title","localeCompare","user","completed","reducer","combineReducers","isLoading","todosData","todosReducer","store","createStore","getAllTodos","fetch","then","response","json","getAllUsers","User","_ref","react_default","createElement","TodoItem","text","className","htmlFor","id","checked","readOnly","user_User","key","mapDispatch","sortByCompleted","sortByTitle","sortByUser","connect","fieldName","sortOrderArrow","defaultSortArrow","scope","onClick","map","item","todo_item_TodoItem","startLoading","finishLoading","setTodos","loadData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref3","_ref4","todoList","users","items","wrap","_context","prev","next","Promise","all","sent","slicedToArray","getTodosWithUsers","stop","apply","this","todo","App_objectSpread","find","userId","todo_list_TodoList","disabled","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7cd7810e.chunk.js","sourcesContent":["const START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const finishLoading = () => ({\n  type: FINISH_LOADING,\n});\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case FINISH_LOADING:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","export const SORT_ORDER_COMPLETED = 'SORT_COMPLETED';\nexport const SORT_ORDER_TITLE = 'SORT_TITLE';\nexport const SORT_ORDER_USER = 'SORT_USER';\nexport const SET_TODOS = 'SET_TODOS';\n\nexport const setTodos = todos => ({\n  type: SET_TODOS,\n  todos,\n});\n\nexport const sortByCompleted = () => ({\n  type: SORT_ORDER_COMPLETED,\n});\n\nexport const sortByTitle = () => ({\n  type: SORT_ORDER_TITLE,\n});\n\nexport const sortByUser = () => ({\n  type: SORT_ORDER_USER,\n});\n\nconst sortedTodosReducer = (state = [], action) => {\n  const { initialTodos = [], sortField: { fieldDirection } = 1 } = state;\n  const newSortDirection = fieldDirection === 1 ? -1 : 1;\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        sortField: {\n          name: '',\n          fieldDirection: 1,\n        },\n        sortedTodos: action.todos,\n        initialTodos: action.todos,\n      };\n    case SORT_ORDER_TITLE:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => a.title.localeCompare(b.title)\n            * fieldDirection),\n      };\n    case SORT_ORDER_USER:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)\n            * fieldDirection),\n      };\n    case SORT_ORDER_COMPLETED:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => (b.completed - a.completed)\n            * fieldDirection),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sortedTodosReducer;\n","import { createStore, combineReducers } from 'redux';\nimport loadingReducer from './redux/loading';\nimport todosReducer from './redux/todosData';\n\nconst reducer = combineReducers({\n  isLoading: loadingReducer,\n  todosData: todosReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","const getAllTodos = () => fetch('https://jsonplaceholder.typicode.com/todos')\n  .then(response => response.json());\n\nexport default getAllTodos;\n","const getAllUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json());\n\nexport default getAllUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => (\n  <span>{name}</span>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../user/User';\n\nconst TodoItem = ({ text, completed, user }) => (\n  <tr\n    className=\"item\"\n  >\n    <td>\n      <label\n        className=\"label d-flex justify-content-center align-items-center\"\n        htmlFor=\"checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          checked={completed}\n          readOnly\n        />\n      </label>\n    </td>\n    <td>\n      <span className=\"label\">{text}</span>\n    </td>\n    <td>\n      <User\n        key={user.id}\n        name={user.name}\n      />\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number,\n  text: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.object,\n}.isRequired;\n\nexport default TodoItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todo-item/TodoItem';\nimport {\n  sortByCompleted, sortByTitle, sortByUser,\n  SORT_ORDER_COMPLETED, SORT_ORDER_TITLE, SORT_ORDER_USER,\n} from '../../redux/todosData';\n\nconst TodoList = ({\n// eslint-disable-next-line no-shadow\n  sortByUser, sortByCompleted, sortByTitle,\n  sortedTodos, fieldDirection, fieldName,\n}) => {\n  const sortOrderArrow = fieldDirection === 1\n    ? <span>&#8595;</span>\n    : <span>&#8593;</span>;\n  const defaultSortArrow = <span>&#11021;</span>;\n\n  return (\n    <table className=\"table table-striped\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th\n            scope=\"col\"\n            className=\"text-center\"\n            onClick={sortByCompleted}\n          >\n            <span className=\"mr-3\">Status</span>\n            <span>\n              {fieldName === SORT_ORDER_COMPLETED\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n          <th\n            scope=\"col\"\n            onClick={sortByTitle}\n          >\n            <span className=\"mr-3\">Task</span>\n            <span>\n              {fieldName === SORT_ORDER_TITLE\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n          <th\n            scope=\"col\"\n            onClick={sortByUser}\n          >\n            <span className=\"mr-3\">User</span>\n            <span>\n              {fieldName === SORT_ORDER_USER\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedTodos.map((item) => {\n          const {\n            id, completed, title, user,\n          } = item;\n          return (\n            <TodoItem\n              key={id}\n              completed={completed}\n              id={id}\n              text={title}\n              user={user}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapState = state => ({\n  sortedTodos: state.todosData.sortedTodos,\n  fieldDirection: state.todosData.sortField.fieldDirection,\n  fieldName: state.todosData.sortField.name,\n});\n\nconst mapDispatch = {\n  sortByCompleted, sortByTitle, sortByUser,\n};\n\nTodoList.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldDirection: PropTypes.number.isRequired,\n  sortByCompleted: PropTypes.func.isRequired,\n  sortByTitle: PropTypes.func.isRequired,\n  sortByUser: PropTypes.func.isRequired,\n  sortedTodos: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(Array),\n  ]).isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getAllTodos from './components/util/TodoApi';\nimport getAllUsers from './components/util/UserApi';\nimport TodoList from './components/todo-list/TodoList';\n\nimport { startLoading, finishLoading } from './redux/loading';\nimport { setTodos } from './redux/todosData';\n\nconst App = ({\n// eslint-disable-next-line no-shadow\n  isLoading, startLoading, setTodos, finishLoading, todos,\n}) => {\n  const loadData = async() => {\n    startLoading();\n\n    const [todoList, users] = await Promise.all([\n      getAllTodos(),\n      getAllUsers(),\n    ]);\n    const items = getTodosWithUsers(todoList, users);\n\n    setTodos(items);\n    finishLoading();\n  };\n\n  const getTodosWithUsers = (todoList, users) => todoList.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n  return (\n    <div\n      className=\"d-flex flex-column align-items-center justify-content-center \"\n    >\n      <h1 className=\"text-center mb-3 mt-3\">React dynamic list of todos</h1>\n      { todos ? (\n        <TodoList />\n      ) : (\n        <button\n          type=\"button\"\n          onClick={loadData}\n          className=\"btn btn-dark btn-lg\"\n          disabled={isLoading}\n        >\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapState = state => ({\n  isLoading: state.isLoading,\n  todos: state.todosData.initialTodos || '',\n});\n\nconst mapDispatch = {\n  startLoading, finishLoading, setTodos,\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  startLoading: PropTypes.func.isRequired,\n  finishLoading: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n  todos: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(Array),\n  ]).isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}