{"version":3,"sources":["store.js","User.js","TodoItem.js","TodoList.js","App.js","api/todosApi.js","api/usersApi.js","index.js"],"names":["getTodos","state","todos","getIsLoading","isLoading","getIsLoaded","isLoaded","getSortField","sortField","store","createStore","action","type","Object","objectSpread2","value","User","_ref","user","react_default","a","createElement","name","TodoItem","todo","Fragment","id","title","src_User","completed","connect","sortTodos","onClick","map","src_TodoItem","key","mapDispatchToProps","setTodos","setLoading","setLoaded","setSortField","className","_ref2","_ref3","todosFromServer","usersFromServer","preparedTodos","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","slicedToArray","find","item","userId","stop","src_TodoList","sortBy","toConsumableArray","reverse","sort","b","localeCompare","toString","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2cfe353.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\n// action types\nexport const SET_TODOS = 'SET_TODOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_LOADED = 'SET_LOADED';\nexport const SET_SORT_FIELD = 'SET_SORT_FIELD';\n\n// action creators\nexport const setTodosAC = value => ({\n  type: SET_TODOS, value,\n});\nexport const setLoadingAC = value => ({\n  type: SET_LOADING, value,\n});\nexport const setLoadedAC = value => ({\n  type: SET_LOADED, value,\n});\nexport const setSortFieldAC = value => ({\n  type: SET_SORT_FIELD, value,\n});\n\n// selectors\nexport const getTodos = state => state.todos;\nexport const getIsLoading = state => state.isLoading;\nexport const getIsLoaded = state => state.isLoaded;\nexport const getSortField = state => state.sortField;\n\n// init state\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isLoaded: false,\n  sortField: 'id',\n};\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.value,\n      };\n    case SET_SORT_FIELD:\n      return {\n        ...state,\n        sortField: action.value,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n    case SET_LOADED:\n      return {\n        ...state,\n        isLoaded: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape(\n    { name: PropTypes.string }\n  ).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <>\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <User user={todo.user} />\n      <td>{todo.completed ? 'Done' : 'In progress'}</td>\n    </tr>\n  </>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTodos } from './store';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, sortTodos }) => (\n  <table>\n    <tbody>\n      <tr>\n        <th onClick={() => sortTodos('id')}>\n          ID\n        </th>\n        <th onClick={() => sortTodos('title')}>\n          Title\n        </th>\n        <th onClick={() => sortTodos('user')}>\n          User\n        </th>\n        <th onClick={() => sortTodos('status')}>\n          Status\n        </th>\n      </tr>\n      {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  todos: getTodos(state),\n});\n\nexport default connect(mapStateToProps)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  setTodosAC, setLoadingAC, setLoadedAC, setSortFieldAC,\n  getTodos, getSortField, getIsLoading, getIsLoaded,\n} from './store';\nimport { getTodosFromServer } from './api/todosApi';\nimport { getUsersFromServer } from './api/usersApi';\nimport TodoList from './TodoList';\n\nconst App = ({\n  todos, setTodos, sortField, setSortField,\n  isLoading, setLoading, isLoaded, setLoaded,\n}) => {\n  const loadTodos = async() => {\n    setLoading(true);\n\n    const [todosFromServer, usersFromServer] = await Promise.all(\n      [getTodosFromServer(), getUsersFromServer()]\n    );\n\n    const preparedTodos = todosFromServer.map((todo) => {\n      const user = usersFromServer.find(item => item.id === todo.userId);\n\n      return {\n        ...todo, user,\n      };\n    });\n\n    setTodos(preparedTodos);\n    setLoaded(true);\n    setLoading(false);\n  };\n\n  const sortTodos = (sortBy) => {\n    if (sortBy === sortField) {\n      setTodos([...todos].reverse());\n    } else {\n      switch (sortBy) {\n        case 'title':\n          setTodos([...todos]\n            .sort((a, b) => a.title.localeCompare(b.title)));\n          break;\n        case 'user':\n          setTodos([...todos]\n            .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n          break;\n        case 'status':\n          setTodos([...todos]\n            .sort((a, b) => b.completed.toString().localeCompare(\n              a.completed.toString()\n            )));\n          break;\n        default:\n          setTodos([...todos]\n            .sort((a, b) => a.id - b.id));\n      }\n      setSortField(sortBy);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>React-Redux list of todos</h1>\n      {!isLoaded && !isLoading\n        ? (\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n          >\n            Load list of Todos\n          </button>\n        )\n        : ''\n      }\n      {isLoading ? (<h3>Loading... Please wait...</h3>) : ''}\n      {isLoaded ? <TodoList sortTodos={sortTodos} /> : ''}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: getTodos(state),\n  isLoading: getIsLoading(state),\n  isLoaded: getIsLoaded(state),\n  sortField: getSortField(state),\n});\n\nconst mapDispatchToProps = {\n  setTodos: setTodosAC,\n  setLoading: setLoadingAC,\n  setLoaded: setLoadedAC,\n  setSortField: setSortFieldAC,\n};\n\nApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortField: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n  setTodos: PropTypes.func.isRequired,\n  setSortField: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  setLoaded: PropTypes.func.isRequired,\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodosFromServer = () => fetch(URL)\n  .then(response => response.json());\n","const URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsersFromServer = () => fetch(URL)\n  .then(response => response.json());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}