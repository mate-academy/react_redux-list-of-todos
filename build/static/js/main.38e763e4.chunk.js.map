{"version":3,"sources":["store/index.js","components/user/User.js","components/todo-item/TodoItem.js","components/todo-item/TodoItemHandler.js","components/todo-list/TodoList.js","components/todo-list/TodoListHandler.js","App.js","AppConnect.js","index.js"],"names":["ACTION_TYPES","ADD_TODOS","SWITCH_LOADING","IS_LOADED","HAS_ERROR","IS_SORT","ADD_SORTED_TODOS","DELETE_TODO","switchLoading","isLoading","type","payload","errorTodos","hasError","getTodosUsers","dispatch","isLoadData","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","responseTodos","responseUsers","json","_ref3","_ref4","todos","usersMapApi","reduce","acum","user","_objectSpread","defineProperty","id","getTodosWithUsers","todosArray","usersApi","map","todo","userId","todosSorted","preparedTodos","sortedTodos","toConsumableArray","sort","a","b","title","localeCompare","addTodos","catch","initialState","isSorted","store","createStore","state","arguments","length","undefined","action","deleteTodoWithList","list","filter","applyMiddleware","thunk","User","react_default","createElement","name","email","TodoItem","deleteTodo","href","user_User","onClick","EnhancedTodoItem","connect","idTodo","TodoList","_ref$todos","_ref$todosSorted","Fragment","TodoItemHandler","key","EnhancedList","App","sortTodos","TodoListHandler","EnhancedApp","ReactDOM","render","es","AppConnect","document","getElementById"],"mappings":"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","file":"static/js/main.38e763e4.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst ACTION_TYPES = {\n  ADD_TODOS: 'TODOS_ADD',\n  SWITCH_LOADING: 'LOADING_SWITCH',\n  IS_LOADED: 'LOADED_IS',\n  HAS_ERROR: 'ERROR_HAS',\n  IS_SORT: 'IS_SORT',\n  ADD_SORTED_TODOS: 'SORTED_TODOS_ADD',\n  DELETE_TODO: 'TODO_DELETE',\n};\n\nexport const deleteTodo = idTodo => ({\n  type: ACTION_TYPES.DELETE_TODO,\n  payload: idTodo,\n});\n\nexport const addTodos = todos => ({\n  type: ACTION_TYPES.ADD_TODOS,\n  payload: todos,\n});\n\nexport const addSortedTodos = todosSorted => ({\n  type: ACTION_TYPES.ADD_SORTED_TODOS,\n  payload: todosSorted,\n});\n\nexport const switchLoading = isLoading => ({\n  type: ACTION_TYPES.SWITCH_LOADING,\n  payload: isLoading,\n});\n\nexport const loaded = isLoadData => ({\n  type: ACTION_TYPES.IS_LOADED,\n  payload: isLoadData,\n});\n\nexport const errorTodos = hasError => ({\n  type: ACTION_TYPES.HAS_ERROR,\n  payload: hasError,\n});\n\nexport const sortTodos = () => ({\n  type: ACTION_TYPES.IS_SORT,\n});\n\nexport const getTodosUsers = () => (dispatch) => {\n  dispatch(switchLoading(true));\n  dispatch(loaded(true));\n  dispatch(errorTodos(false));\n\n  Promise.all([\n    fetch('https://jsonplaceholder.typicode.com/todos'),\n    fetch('https://jsonplaceholder.typicode.com/users'),\n  ])\n    .then(([responseTodos, responseUsers]) => Promise\n      .all([responseTodos.json(), responseUsers.json()]))\n    .then(([todos, users]) => {\n      const usersMapApi = users\n        .reduce((acum, user) => ({ ...acum, [user.id]: user }), {});\n\n      function getTodosWithUsers(todosArray, usersApi) {\n        return todosArray.map(todo => ({\n          ...todo,\n          user: usersApi[todo.userId],\n        }));\n      }\n\n      const preparedTodos = getTodosWithUsers(todos, usersMapApi);\n      const sortedTodos = [...getTodosWithUsers(todos, usersMapApi)].sort((a, b) => a.title.localeCompare(b.title));\n\n      dispatch(switchLoading(false));\n      dispatch(addTodos(preparedTodos));\n      dispatch(addSortedTodos(sortedTodos));\n    })\n    .catch(() => {\n      dispatch(errorTodos(true));\n      dispatch(switchLoading(false));\n    });\n};\n\nconst initialState = {\n  todos: [],\n  todosSorted: [],\n  isLoading: false,\n  isLoadData: false,\n  hasError: false,\n  isSorted: false,\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_TODOS: {\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    }\n\n    case ACTION_TYPES.DELETE_TODO: {\n      const deleteTodoWithList = list => list\n        .filter(todo => todo.id !== action.payload);\n\n      return {\n        ...state,\n        todos: deleteTodoWithList(state.todos),\n        todosSorted: deleteTodoWithList(state.todosSorted),\n      };\n    }\n\n    case ACTION_TYPES.ADD_SORTED_TODOS: {\n      return {\n        ...state,\n        todosSorted: [...action.payload],\n      };\n    }\n\n    case ACTION_TYPES.SWITCH_LOADING: {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.IS_LOADED: {\n      return {\n        ...state,\n        isLoadData: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.HAS_ERROR: {\n      return {\n        ...state,\n        hasError: action.payload,\n      };\n    }\n\n    case ACTION_TYPES.IS_SORT: {\n      return {\n        ...state,\n        isSorted: !state.isSorted,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User';\n\nfunction User({ user }) {\n  return (\n    <div>\n      <p>\n        Responsible:\n        <span>\n          {user.name}\n        </span>\n      </p>\n      <p>\n        Contact:\n        <span>\n          {user.email}\n        </span>\n      </p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../user/User';\nimport './TodoItem.css';\n\nfunction TodoItem({ todo, deleteTodo }) {\n  return (\n    <span >\n      <a href=\"#\">\n        <h2>{todo.title}</h2>\n        <p>\n          Completed:\n        </p>\n        <div>\n          <User user={todo.user} />\n          <button type=\"button\" onClick={() => deleteTodo(todo.id)}>Delete Todo</button>\n        </div>\n      </a>\n    </span>\n  );\n}\n\nconst shape = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n});\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: shape.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { deleteTodo } from '../../store/index';\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: id => dispatch(deleteTodo(id)),\n});\n\nconst EnhancedTodoItem = connect(\n  state => ({\n    isLoading: state.isLoading,\n    isLoadData       : state.isLoadData       ,\n    hasError: state.hasError,\n  }),\n  mapDispatchToProps,\n)(TodoItem);\n\nexport default EnhancedTodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItemHandler from '../todo-item/TodoItemHandler';\nimport './TodoList.css';\n\nfunction TodoList({ todos = [], todosSorted = [], isSorted }) {\n  return (\n    <>\n      <p>\n       Todos:\n      </p>\n      <div>\n        {!isSorted\n          ? (\n            todos.map(todo => (\n              <TodoItemHandler todo={todo} key={todo.id} />\n            ))\n          )\n          : (\n            todosSorted.map(todo => (\n              <TodoItemHandler todo={todo} key={todo.id} />\n            ))\n          )}\n      </div>\n    </>\n  );\n}\n\nconst shape = PropTypes.shape({\n  title: PropTypes.string,\n  completed: PropTypes.string,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      todo: shape,\n    }).isRequired,\n  ).isRequired,\n  todosSorted: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      todo: shape,\n    }).isRequired,\n  ).isRequired,\n  isSorted: PropTypes.bool.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport TodoList from './TodoList';\n\nconst EnhancedList = connect(\n  state => ({\n    todos: state.todos,\n    todosSorted: state.todosSorted,\n    isSorted: state.isSorted,\n  }),\n)(TodoList);\n\nexport default EnhancedList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EnhancedList from './components/todo-list/TodoListHandler';\nimport './App.css';\n\nconst App = ({\n  isLoading,\n  getTodosUsers,\n  isLoadData,\n  hasError,\n  sortTodos,\n}) => {\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (hasError) {\n    return (\n      <>\n        <h1>Please, try again.</h1>\n        <button\n          type=\"button\"\n          onClick={getTodosUsers}\n        >\n          Load again\n        </button>\n      </>\n    );\n  }\n\n  if (!isLoadData) {\n    return (\n      <>\n        <h1>Do you want to upload a list of todos?</h1>\n        <button\n          type=\"button\"\n          onClick={getTodosUsers}\n        >\n          Load\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={sortTodos}\n      >\n        Sort\n      </button>\n      <EnhancedList />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  getTodosUsers: PropTypes.func.isRequired,\n  isLoadData: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getTodosUsers, sortTodos } from './store/index';\n\nconst mapDispatchToProps = dispatch => ({\n  getTodosUsers: () => dispatch(getTodosUsers()),\n  sortTodos: () => dispatch(sortTodos()),\n});\n\nconst EnhancedApp = connect(\n  state => ({\n    isLoading: state.isLoading,\n    isLoadData: state.isLoadData,\n    hasError: state.hasError,\n  }),\n  mapDispatchToProps,\n)(App);\n\nexport default EnhancedApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport EnhancedApp from './AppConnect';\n\nReactDOM.render((\n  <Provider store={store}>\n    <EnhancedApp />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}