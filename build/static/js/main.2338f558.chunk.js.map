{"version":3,"sources":["api/data.js","store/index.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/App/App.js","components/App/index.js","index.js"],"names":["getData","url","fetch","concat","then","response","json","ACTION_TYPES","LOADI_TODOS_REQUEST","LOAD_TODOS_SUCCESS","GET_DATA","loading","type","loadData","dispatch","Promise","all","_ref","_ref2","Object","slicedToArray","todos","users","getPreparedData","initialState","isLoading","isLoaded","store","createStore","state","arguments","length","undefined","action","_objectSpread","map","todo","user","find","item","id","userId","applyMiddleware","thunk","User","name","email","react_default","a","createElement","Fragment","className","href","TodoItem","completed","components_User_User","title","TodoList","components_TodoItem_TodoItem","key","App","onClick","components_TodoList_TodoList","Enhanced","connect","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.2338f558.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com/';\nexport const getData = url => fetch(`${BASE_URL}${url}`).then(response => response.json());\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getData } from '../api/data';\n\nconst ACTION_TYPES = {\n  LOADI_TODOS_REQUEST: 'LOADI_TODOS_REQUEST',\n  LOAD_TODOS_SUCCESS: 'LOAD_TODOS_SUCCESS',\n  GET_DATA: 'GET_DATA',\n};\n\nexport const loading = () => ({\n  type: ACTION_TYPES.LOADI_TODOS_REQUEST,\n});\nexport const loaded = () => ({\n  type: ACTION_TYPES.LOAD_TODOS_SUCCESS,\n});\nconst getPreparedData = (todos, users) => ({\n  type: ACTION_TYPES.GET_DATA,\n  todos,\n  users,\n});\n\nexport const loadData = () => (dispatch) => {\n  dispatch(loading());\n\n  Promise.all([getData('todos'), getData('users')])\n    .then(([todos, users]) => {\n      dispatch(loading());\n      dispatch(getPreparedData(todos, users));\n      dispatch(loaded());\n    });\n};\n\nconst initialState = {\n  isLoading: false,\n  isLoaded: false,\n  todos: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.LOADI_TODOS_REQUEST: {\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    }\n    case ACTION_TYPES.LOAD_TODOS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: !state.isLoaded,\n      };\n    }\n    case ACTION_TYPES.GET_DATA: {\n      return {\n        ...state,\n        todos: action.todos.map(todo => ({\n          ...todo,\n          user: action.users.find(item => item.id === todo.userId),\n        })),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name,email }) => (\n  <>\n    <div className=\"header\">{name}</div>\n    <div className=\"item meta\">\n      <i className=\"mail icon\" />\n      <a href={`mailto:${email}`} className=\"content\">{email}</a>\n    </div>\n  </>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport './TodoItem.css';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ todo }) => (\n  <div\n    className={\n      todo.completed ? 'ui raised link green card' : 'ui raised link red card'\n    }\n  >\n    <div className=\"content\">\n      <User {...todo.user} />\n      <div className=\"description\">{todo.title}</div>\n      {todo.completed ? (\n        <i className=\"check circle outline green icon\" />\n      ) : (\n        <i className=\"times circle outline red icon\" />\n      )}\n    </div>\n  </div>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport './TodoList.css';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"ui cards\">\n    {todos.map(todo => (\n      <TodoItem todo={todo} key={todo.id} />))}\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"../TodoItem/TodoItem\";\n\nimport TodoList from \"../TodoList/TodoList\";\n\nconst App = ({\n loadData, isLoading, isLoaded, todos,\n}) => (\n  <div className=\"app\">\n    {isLoading && (\n      <div className=\"ui segment\">\n        <div className=\"ui active inverted dimmer\">\n          <div className=\"ui large text loader\">Loading</div>\n        </div>\n      </div>\n    )}\n    {!todos.length && !isLoading && (\n      <button onClick={loadData} className=\"positive ui button\">\n        Click\n      </button>\n    )}\n    {isLoaded && (\n      <>\n        <h1>\n          <span className=\"ui red header\">Static</span>{\" \"}\n          <span className=\"ui green header\">list</span>{\" \"}\n          <span className=\"ui yellow header\">of</span>{\" \"}\n          <span className=\"ui blue header\">todos</span>\n        </h1>\n        <div className=\"ui statistics\">\n          <div className=\"teal statistic\">\n            <div className=\"value\">{todos.length}</div>\n            <div className=\"label\">TODOs</div>\n          </div>\n        </div>\n        <TodoList todos={todos} />\n      </>\n    )}\n  </div>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadData } from '../../store';\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: () => dispatch(loadData()),\n});\n\nfunction mapState2Props(state) {\n  return {\n    todos: state.todos,\n    isLoading: state.isLoading,\n    isLoaded: state.isLoaded,\n  };\n};\n\nconst Enhanced = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(App);\n\nexport {\n  Enhanced as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}