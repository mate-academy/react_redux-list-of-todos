{"version":3,"sources":["api/todosApi.js","api/usersApi.js","store.js","api/components/todoItem.js","api/components/todoList.js","App.js","index.js"],"names":["getTodos","fetch","then","response","json","catch","getUsers","handleDelete","payload","type","store","createStore","state","action","Object","objectSpread2","isLoading","hasError","todos","filter","item","id","connect","dispatch","handleDeleteTodo","peyload","_ref","title","completed","userName","userEmail","react_default","a","createElement","Fragment","IconButton","onClick","aria-label","SvgIcon","xmlns","viewBox","width","height","fill","d","TodoList","map","todo","todoItem","key","user","name","email","App","loadData","_this$props","startLoad","handleOk","_ref2","todosFromServer","usersFromServer","regenerator_default","async","_context","prev","next","_this","props","awrap","Promise","all","sent","slicedToArray","find","person","userId","stop","_this$props2","this","className","todoList","React","Component","handleSuccess","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.449dee52.chunk.js","sourcesContent":["const URL = 'https://jsonplaceholder.typicode.com/todos';\nconst getTodos = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getTodos;\n","const URL = 'https://jsonplaceholder.typicode.com/users';\nconst getUsers = () => fetch(URL)\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\nexport default getUsers;\n","import { createStore } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleSuccess = todos => ({\n  type: HANDLE_SUCCESS, todos,\n});\n\nexport const handleDelete = payload => ({\n  type: DELETE_TODO, payload,\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: true,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, {\n  isLoading: false,\n  hasError: false,\n  todos: [],\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { handleDelete } from '../../store';\n\nconst TodoItem\n  = ({ id, title, completed, userName, userEmail, handleDeleteTodo }) => (\n    <>\n      <tr>\n        <td>{id}</td>\n        <td>{title}</td>\n        <td>\n          {completed === true\n            ? 'completed'\n            : 'no completed'}\n        </td>\n        <td>\n          {userName}\n        </td>\n        <td>\n          {userEmail}\n        </td>\n        <td>\n          <IconButton\n            onClick={() => handleDeleteTodo(id)}\n            aria-label=\"delete\"\n          >\n            <SvgIcon>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 40 40\"\n                width=\"25px\"\n                height=\"25px\"\n              >\n                <path\n                  fill=\"#dff0fe\"\n                  d=\"M21 24.15L8.857\n                  36.293 4.707 32.143\n                  16.85 20 4.707 7.857\n                  8.857 3.707 21 15.85\n                  33.143 3.707 37.293\n                  7.857 25.15 20 37.293\n                  32.143 33.143 36.293z\"\n                />\n                <path\n                  fill=\"#4788c7\"\n                  d=\"M33.143,4.414l3.443,\n                  3.443L25.15,19.293L24.443,\n                  20l0.707,0.707l11.436,11.436l-3.443,\n                  3.443 L21.707,24.15L21,23.443l-0.707,\n                  0.707L8.857,35.586l-3.443-3.443L16.85,\n                  20.707L17.557,20l-0.707-0.707L5.414,\n                  7.857l3.443-3.443 L20.293,15.85L21,\n                  16.557l0.707-0.707L33.143,4.414 M33.143,\n                  3L21,15.143L8.857,3L4,7.857L16.143,20L4,\n                  32.143L8.857,37L21,24.857 L33.143,37L38,\n                  32.143L25.857,20L38,7.857L33.143,3L33.143,3z\"\n                />\n              </svg>\n            </SvgIcon>\n          </IconButton>\n        </td>\n      </tr>\n\n    </>\n  );\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDeleteTodo: peyload => dispatch(handleDelete(peyload)),\n});\n\nTodoItem.propTypes = {\n  handleDeleteTodo: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userName: PropTypes.string.isRequired,\n  userEmail: PropTypes.string.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoItem';\n\nconst TodoList = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        id={todo.id}\n        title={todo.title}\n        completed={todo.completed}\n        userName={todo.user.name}\n        userEmail={todo.user.email}\n      />\n    ))}\n  </>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getTodos from './api/todosApi';\nimport getUsers from './api/usersApi';\nimport {\n  startLoading,\n  handleSuccess,\n  handleDelete,\n} from './store';\nimport TodoList from './api/components/todoList';\n\nclass App extends React.Component {\n   loadData = async() => {\n     const { startLoad, handleOk } = this.props;\n\n     startLoad();\n\n     const [\n       todosFromServer,\n       usersFromServer,\n     ] = await Promise.all([\n       getTodos(),\n       getUsers(),\n     ]);\n\n     handleOk(todosFromServer.map(todo => (\n       {\n         ...todo,\n         user: usersFromServer.find(person => person.id === todo.userId),\n       })));\n   };\n\n   render() {\n     const { todos, isLoading } = this.props;\n\n     return (\n       isLoading\n         ? (\n           <section>\n             <h1>Dynamic list of todos</h1>\n             <div className=\"App\">\n               <table>\n                 <thead>\n                   <tr>\n                     <th className=\"click\">\n                       Id\n                     </th>\n                     <th className=\"click\">\n                       Title\n                     </th>\n                     <th className=\"click\">\n                       Status\n                     </th>\n                     <th className=\"click\">\n                       User Name\n                     </th>\n                     <th className=\"click\">\n                       User Email\n                     </th>\n                   </tr>\n                 </thead>\n                 <tbody>\n                   <TodoList todos={todos} />\n                 </tbody>\n               </table>\n             </div>\n           </section>\n         ) : (\n           <>\n             <button\n               type=\"button\"\n               onClick={this.loadData}\n             >\n               Load todos\n             </button>\n           </>\n         )\n     );\n   }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoad: () => dispatch(startLoading()),\n  handleOk: todos => dispatch(handleSuccess(todos)),\n  handleDeleteTodo: peyload => dispatch(handleDelete(peyload)),\n});\n\nApp.propTypes = {\n  startLoad: PropTypes.func.isRequired,\n  handleOk: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  })).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}