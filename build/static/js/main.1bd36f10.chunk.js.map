{"version":3,"sources":["redux/actions.js","redux/reducers.js","components/User.jsx","components/TodoItemHandler.jsx","components/TodoItem.jsx","components/TodoListHandler.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["LOAD_DATA","REMOVE_ITEM","DISPLAY_DATA","SORT_DATA","loadData","dispatch","type","Promise","all","fetch","then","response","json","_ref","_ref2","Object","slicedToArray","todos","users","todosData","map","todo","user","find","userId","id","objectSpread","status","completed","userName","name","userEmail","email","data","initialState","requested","User","props","react_default","a","createElement","Fragment","href","concat","className","TodoItemHandler","connect","state","ownProps","title","index","removeItem","onClick","TodoListHandler","sortData","string","disabled","components_TodoItemHandler","key","store","createStore","arguments","length","undefined","action","filter","item","duplicatedData","toConsumableArray","sort","b","localeCompare","applyMiddleware","thunk","ReactDOM","render","es","components_TodoListHandler","document","getElementById"],"mappings":"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","file":"static/js/main.1bd36f10.chunk.js","sourcesContent":["export const LOAD_DATA = 'load_data';\nexport const REMOVE_ITEM = 'remove_item';\nexport const DISPLAY_DATA = 'display_data';\nexport const SORT_DATA = 'sort_data';\n\nexport function removeData(id) {\n  return {\n    type: REMOVE_ITEM,\n    id,\n  };\n}\n\nexport function loadData() {\n  return (dispatch) => {\n    dispatch({\n      type: LOAD_DATA,\n    });\n\n    Promise.all([\n      fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(response => response.json()),\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json()),\n    ])\n      .then(([todos, users]) => {\n        const todosData = todos.map((todo) => {\n          const user = users.find(user => todo.userId === user.id);\n          return {\n            ...todo,\n            status: todo.completed ? 'completed' : 'not completed',\n            user,\n            userName: user.name,\n            userEmail: user.email,\n          };\n        });\n        dispatch(displayData(todosData));\n      });\n  };\n}\n\nexport function displayData(data) {\n  return {\n    type: DISPLAY_DATA,\n    data,\n  };\n}\n\nexport function removeItem(id) {\n  return {\n    type: REMOVE_ITEM,\n    id,\n  };\n}\n\nexport function sortData(string) {\n  return {\n    type: SORT_DATA,\n    string,\n  };\n}\n","import {\n  LOAD_DATA,\n  DISPLAY_DATA,\n  REMOVE_ITEM,\n  SORT_DATA\n} from \"./actions\";\n\nconst initialState = {\n  requested: false,\n  data: null\n};\n\nexport default function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_DATA:\n      return {\n        ...state,\n        requested: true\n      };\n    case DISPLAY_DATA:\n      return {\n        ...state,\n        data: action.data\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        data: state.data.filter((item, index) => index !== action.id)\n      };\n    case SORT_DATA:\n      const duplicatedData = [...state.data];\n      duplicatedData.sort((a,b) => a[action.string].localeCompare(b[action.string]));\n      return {\n        ...state,\n        data: duplicatedData\n\n      };\n    default:\n      return state;\n  }\n}","import React from 'react';\n\nexport default function User(props) {\n  const { user, email } = props;\n\n  return (\n    <>\n      <a href={`mailto:${email}`}>\n        <span className=\"email\">&#9993;</span>\n        {user}\n      </a>\n    </>\n  );\n}\n","import { connect } from 'react-redux';\nimport { removeItem } from '../redux/actions';\nimport TodoItem from './TodoItem';\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    title: ownProps.todo.title,\n    user: ownProps.todo.userName,\n    email: ownProps.todo.userEmail,\n    status: ownProps.todo.status,\n    index: ownProps.index,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeItem: index => dispatch(removeItem(index)),\n  };\n}\n\nconst TodoItemHandler = connect(mapStateToProps, mapDispatchToProps)(TodoItem);\nexport default TodoItemHandler;\n","import React from 'react';\nimport User from './User';\n\nexport default function TodoItem(props) {\n  const {\n    title,\n    user,\n    email,\n    status,\n    index,\n    removeItem,\n  } = props;\n\n  return (\n    <tr>\n      <td>{title}</td>\n      <td><User user={user} email={email} /></td>\n      <td className={props.todo.completed ? 'completed' : 'not-completed'}>{status}</td>\n      <td onClick={() => removeItem(index)} className=\"remove-item\">&times;</td>\n    </tr>\n  );\n}\n","import { connect } from 'react-redux';\nimport { loadData, sortData } from '../redux/actions';\nimport TodoList from './TodoList';\n\nfunction mapStateToProps(state) {\n  return {\n    requested: state.requested,\n    data: state.data,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadData: () => dispatch(loadData()),\n    sortData: string => dispatch(sortData(string)),\n  };\n}\n\nconst TodoListHandler = connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nexport default TodoListHandler;\n","import React from 'react';\nimport TodoItemHandler from './TodoItemHandler';\n\nexport default function TodoList(props) {\n  const {\n    requested, data, loadData, sortData,\n  } = props;\n  if (!requested) {\n    return (\n      <div className=\"load-data-container\">\n        <button type=\"button\" onClick={loadData} className=\"ui massive button\">Load ToDo list</button>\n      </div>\n    );\n  }\n\n  if (data === null) {\n    return <button type=\"button\" className=\"ui loading button ui massive button\" disabled />;\n  }\n\n  return (\n    <table className=\"ui celled table\">\n      <thead>\n        <tr>\n          <th onClick={() => sortData('title')} className=\"thead\">What to do?</th>\n          <th onClick={() => sortData('userName')} className=\"thead\">Who to do?</th>\n          <th onClick={() => sortData('status')} className=\"thead\">Whether done</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((todo, index) => <TodoItemHandler todo={todo} index={index} key={todo.id} />)}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport getNextState from './redux/reducers';\nimport TodoListHandler from './components/TodoListHandler';\n\nconst store = createStore(getNextState, applyMiddleware(thunk));\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <TodoListHandler />\n    </Provider>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}