{"version":3,"sources":["context.js","components/User.js","components/TodoItem.js","components/TodoList.js","API/getTodos.js","components/Buttons.js","App.js","index.js"],"names":["TodosContext","React","createContext","ForButtonsContext","User","_ref","user","react_default","a","createElement","name","TodoItem","todo","title","components_User","completed","className","Consumer","value","Button","icon","Icon","onClick","deleteUser","id","TodoList","todos","map","components_TodoItem","key","todosURL","getFetch","usersURL","url","fetch","then","response","json","Buttons","Fragment","type","switcher","refresher","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","setState","isLoading","error","initialized","Promise","all","_ref2","slicedToArray","todoList","userList","preparedTodos","objectSpread2","find","userId","catch","finally","sorter","state","todosOnDisplay","prevState","currentSorter","sort","b","localeCompare","filter","item","_this$state","Provider","components_Buttons","components_TodoList","color","PureComponent","contextType","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4389899f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const TodosContext = React.createContext();\n\nexport const ForButtonsContext = React.createContext();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>\n    {user.name}\n  </td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { TodosContext } from '../context';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n\n    {todo.completed\n      ? (\n        <td className=\"positive\">\n          <i className=\"icon checkmark\" />\n          Approved\n        </td>\n      ) : (\n        <td className=\"negative\">\n          <i className=\"icon close\" />\n          In procces\n        </td>\n      )}\n    <td>\n      <TodosContext.Consumer>\n        {value => (\n          <Button icon>\n            <Icon name=\"user delete\" onClick={() => value.deleteUser(todo.id)} />\n          </Button>\n        )}\n      </TodosContext.Consumer>\n\n    </td>\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../context';\n\nconst TodoList = () => (\n  <table className=\"ui red table\">\n    <thead>\n      <tr>\n        <th>TODO item</th>\n        <th>The name of the user</th>\n        <th>Completed</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <TodosContext.Consumer>\n        {value => value.todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </TodosContext.Consumer>\n    </tbody>\n  </table>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const todosURL = getFetch('https://jsonplaceholder.typicode.com/todos');\nconst usersURL = getFetch('https://jsonplaceholder.typicode.com/users');\n\nfunction getFetch(url) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport { todosURL, usersURL };\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { ForButtonsContext } from '../context';\n\nfunction Buttons() {\n  return (\n    <ForButtonsContext.Consumer>\n      {value => (\n        <>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byTitle')}\n          >\n            By User!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byUser')}\n          >\n            By Title!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.switcher('byStatus')}\n          >\n            By Status!\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={() => value.refresher()}\n          >\n            Refresh!\n          </Button>\n        </>\n      )}\n    </ForButtonsContext.Consumer>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport TodoList from './components/TodoList';\nimport { todosURL, usersURL } from './API/getTodos';\nimport Buttons from './components/Buttons';\nimport { TodosContext, ForButtonsContext } from './context';\nimport './App.css';\n\n// export const TodosContext = React.createContext([1, 2]);\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      error: false,\n      initialized: false,\n      currentSorter: 'byUser',\n      preparedTodos: null,\n      todosOnDisplay: null,\n    };\n  }\n\n  // TodosContext = this.state.todosOnDisplay || this.state.preparedTodos;\n\n  loadData = () => {\n    this.setState({\n      isLoading: true,\n      error: false,\n      initialized: true,\n    });\n\n    Promise.all([todosURL, usersURL])\n      .then(([todoList, userList]) => {\n        this.setState({\n          preparedTodos: todoList.map(todo => ({\n            ...todo,\n            user: userList.find(user => todo.userId === user.id),\n          })),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          isLoading: false,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n          initialized: true,\n        });\n      });\n  };\n\n  switcher = (sorter) => {\n    const todos = this.state.todosOnDisplay || this.state.preparedTodos;\n\n    switch (sorter) {\n      case 'byUser':\n        this.setState(prevState => ({\n          ...prevState,\n          currentSorter: 'byUser',\n          todosOnDisplay: todos.sort(\n            (a, b) => a.user.name.localeCompare(b.user.name)\n          ),\n        }));\n        break;\n      case 'byTitle':\n        this.setState(prevState => ({\n          ...prevState,\n          currentSorter: 'byTitle',\n          todosOnDisplay: todos.sort(\n            (a, b) => a.title.localeCompare(b.title)\n          ),\n        }));\n        break;\n      case 'byStatus':\n        this.setState(prevState => ({\n          ...prevState,\n          currentSorter: 'byTitle',\n          todosOnDisplay: todos.sort(\n            (a, b) => a.completed - b.completed\n          ),\n        }));\n        break;\n      default:\n        this.setState(prevState => ({\n          ...prevState,\n          todosOnDisplay: todos,\n        }));\n        break;\n    }\n  }\n\n  refresher = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      todosOnDisplay: prevState.preparedTodos,\n    }));\n  }\n\n  deleteUser = (id) => {\n    const todos = this.state.todosOnDisplay || this.state.preparedTodos;\n\n    this.setState(prevState => ({\n      ...prevState,\n      todosOnDisplay: todos.filter(item => item.id !== id),\n    }));\n  }\n\n  static contextType = TodosContext;\n\n  render() {\n    const {\n      isLoading, error, preparedTodos, todosOnDisplay,\n    } = this.state;\n    const todos = todosOnDisplay || preparedTodos;\n    const { deleteUser } = this;\n    const { switcher, refresher } = this;\n\n    if (isLoading) {\n      return <p>loading...</p>;\n    }\n\n    if (error) {\n      return (\n        <>\n          <p>Error occurred!!!</p>\n          <Button\n            type=\"button\"\n            onClick={this.loadData}\n          >\n            Try Again!\n          </Button>\n        </>\n      );\n    }\n\n    if (!preparedTodos) {\n      return (\n        <>\n          <p>No users and todos yet!</p>\n          <Button type=\"button\" onClick={this.loadData} color=\"green\">\n            Load\n          </Button>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <ForButtonsContext.Provider value={{\n          switcher, refresher,\n        }}\n        >\n          <Buttons />\n        </ForButtonsContext.Provider>\n\n        <TodosContext.Provider value={{\n          todos, deleteUser,\n        }}\n        >\n          <TodoList />\n        </TodosContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}