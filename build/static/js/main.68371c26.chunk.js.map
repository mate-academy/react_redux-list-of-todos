{"version":3,"sources":["Users.js","store.js","todos.js","user.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["Users","_ref","user","react_default","a","createElement","Fragment","username","propTypes","PropTypes","string","isRequired","handleSuccess","todos","type","loadTodos","dispatch","_ref2","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","Object","slicedToArray","map","todo","objectSpread2","find","id","userId","isStart","stop","store","createStore","state","action","isLoading","filter","item","applyMiddleware","thunk","connect","deleteItems","todosDelete","title","src_Users","onClick","className","TodoList","src_TodoItem","App","loadUsersAndTodos","_this","props","_this$props","this","src_TodoList","React","Component","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.68371c26.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Users = ({ user }) => (\n  <>\n    {user.username}\n  </>\n);\n\nUsers.propTypes = { user: PropTypes.string.isRequired };\nexport default Users;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getTodos } from './todos';\nimport { getUsers } from './user';\n\nconst IS_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst DELETE_TODOS = 'DELETE_TODOS';\nconst IS_START = 'IS_START';\n\nexport const isLoading = () => ({ type: IS_LOADING });\nexport const handleSuccess = todos => ({\n  type: HANDLE_SUCCESS,\n  todos,\n});\nexport const todosDelete = item => ({\n  type: DELETE_TODOS,\n  item,\n});\n\nexport const loadTodos = async(dispatch) => {\n  dispatch(isLoading());\n\n  const [todos, users] = await Promise.all([\n    getTodos(),\n    getUsers(),\n  ]);\n\n  dispatch(handleSuccess(todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }))));\n  dispatch(isStart());\n};\n\nexport const isStart = () => ({ type: IS_START });\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isStart: false,\n  handleSuccess: [],\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case IS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        isStart: true,\n      };\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: false,\n      };\n    case IS_START:\n      return {\n        ...state,\n        isLoading: false,\n        isStart: true,\n      };\n\n    case DELETE_TODOS:\n      return {\n        ...state,\n        todos: state.todos.filter(item => item.id !== action.item),\n      };\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","const API = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => fetch(API).then(response => response.json());\n","const API = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(API).then(response => response.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { todosDelete } from './store';\n\nconst TodoItem = ({ todo, deleteItems }) => (\n  <tr>\n    <td >{todo.id}</td>\n    <td >{todo.title}</td>\n    <td >\n      <Users user={todo.user} />\n    </td>\n    <button\n      type=\"button\"\n      onClick={() => deleteItems(todo.id)}\n      className=\"ui icon button\"\n    >\n      <i className=\"trash alternate icon\" />\n    </button>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.string.isRequired,\n  deleteItems: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n});\n\nconst mapDispatchProps = dispatch => ({\n  deleteItems: item => dispatch(todosDelete(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n\n  <table className=\"ui selectable inverted table\">\n    <tbody className=\"tbody\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n        />\n      ))}\n    </tbody>\n  </table>\n\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport './App.css';\nimport { loadTodos } from './store';\n\nclass App extends React.Component {\n  loadUsersAndTodos = () => {\n    this.props.loadTodos();\n  }\n\n  render() {\n    const { todos, isLoading, isStart } = this.props;\n\n    if (isLoading) {\n      return <p className=\"load\">Loading...</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>List of todos</h1>\n        {isStart ? (\n          <section />\n        ) : (\n          <section className=\"load\">\n            <button\n              onClick={this.loadUsersAndTodos}\n              type=\"button\"\n              className=\"ui basic button\"\n            >\n              <i className=\"icon user\" />\n              Load Users\n            </button>\n          </section>\n        )}\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  isStart: state.isStart,\n});\n\nconst mapDispatchProps = dispatch => ({\n  loadTodos: () => dispatch(loadTodos),\n\n});\n\nApp.propTypes = {\n  todos: PropTypes.objectOf(PropTypes.any).isRequired,\n  loadTodos: PropTypes.func.isRequired,\n  isLoading: PropTypes.func.isRequired,\n  isStart: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps,\n  mapDispatchProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}