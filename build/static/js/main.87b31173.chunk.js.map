{"version":3,"sources":["store.js","User.js","TodoItem.js","TodoList.js","apiFetch.js","App.js","index.js"],"names":["store","createStore","state","action","type","Object","objectSpread2","todos","value","isLoading","loaded","error","sortedColumn","User","_ref","user","react_default","a","createElement","name","TodoItem","todo","deleteTodo","id","title","src_User","completed","className","onClick","todoWithUsers","_ref2","users","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","responses","map","response","json","sent","slicedToArray","abrupt","find","userId","stop","connect","dispatch","setTodos","setTodosFromStore","setError","setErrorFromStore","setLoading","setLoadingFromStore","setLoaded","setLoadedFromStore","setSortedColumn","setSortedColumnFromStore","_ref3","loadTodos","gotTodos","_context2","t0","sortBy","field","toConsumableArray","sort","b","localeCompare","status","reverse","filter","length","src_TodoItem","key","App","src_TodoList","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.87b31173.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  loaded: false,\n  error: false,\n  sortedColumn: '',\n};\n\nconst SET_TODOS = 'SET_TODOS';\nconst SET_LOADING = 'SET_LOADING';\nconst SET_LOADED = 'SET_LOADED';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_SORTED_COLUMN = 'SET_SORTED_COLUMN';\n\nexport const setTodosFromStore = value => ({\n  type: SET_TODOS,\n  value,\n});\n\nexport const setErrorFromStore = value => ({\n  type: SET_ERROR,\n  value,\n});\n\nexport const setLoadingFromStore = value => ({\n  type: SET_LOADING,\n  value,\n});\n\nexport const setLoadedFromStore = value => ({\n  type: SET_LOADED,\n  value,\n});\n\nexport const setSortedColumnFromStore = value => ({\n  type: SET_SORTED_COLUMN,\n  value,\n});\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.value,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n    case SET_LOADED:\n      return {\n        ...state,\n        loaded: action.value,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: action.value,\n      };\n    case SET_SORTED_COLUMN:\n      return {\n        ...state,\n        sortedColumn: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => <td>{user.name}</td>;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo, deleteTodo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    <td>{todo.completed ? 'completed' : 'not completed'}</td>\n    <td>\n      <button\n        type=\"button\"\n        className=\"delete-button\"\n        onClick={() => deleteTodo(todo.id)}\n      >\n      X\n      </button>\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchTodosAndUsers } from './apiFetch';\nimport TodoItem from './TodoItem';\nimport { setTodosFromStore,\n  setErrorFromStore,\n  setLoadedFromStore,\n  setLoadingFromStore,\n  setSortedColumnFromStore }\n  from './store';\n\nconst todoWithUsers = async() => {\n  const [users, todos] = await fetchTodosAndUsers();\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n};\n\nconst TodoList = ({ todos, setTodos, isLoading, setLoading, loaded,\n  setLoaded, sortedColumn, setSortedColumn, error, setError }) => {\n  const loadTodos = async() => {\n    try {\n      setLoading(true);\n\n      const gotTodos = await todoWithUsers();\n\n      setTodos(gotTodos);\n      setLoading(false);\n      setLoaded(true);\n      setError(false);\n    } catch (e) {\n      setError(true);\n    }\n  };\n\n  const sortBy = (field) => {\n    const by = {\n      id: (a, b) => a.id - b.id,\n      title: (a, b) => a.title.localeCompare(b.title),\n      user: (a, b) => a.user.name.localeCompare(b.user.name),\n      status: (a, b) => b.completed - a.completed,\n    };\n\n    setSortedColumn(field);\n\n    sortedColumn !== field\n      ? setTodos([...todos].sort(by[field]))\n      : setTodos([...todos].reverse());\n  };\n\n  const deleteTodo = (id) => {\n    setTodos([...todos].filter(todo => todo.id !== id));\n  };\n\n  return (\n    <div>\n      {todos.length === 0 && !error && (\n        <button className=\"button\" type=\"button\" onClick={loadTodos}>\n            Load\n        </button>\n      )}\n      {isLoading && !error && <p>Loading...</p>}\n      {loaded && !isLoading && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th onClick={() => sortBy('id')}>ID</th>\n              <th onClick={() => sortBy('title')}>TITLE</th>\n              <th onClick={() => sortBy('user')}>USER</th>\n              <th onClick={() => sortBy('status')}>STATUS</th>\n              <th>DELETE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem todo={todo} deleteTodo={deleteTodo} key={todo.id} />\n            ))}\n          </tbody>\n        </table>\n      )}\n      {error && (\n        <div>\n            Error\n          <button className=\"button\" type=\"button\" onClick={loadTodos}>\n              Try again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getExtraData = state => ({\n  todos: state.todos,\n  isLoading: state.isLoading,\n  loaded: state.loaded,\n  error: state.error,\n  sortedColumn: state.sortedColumn,\n});\n\nconst getExtraMethods = dispatch => ({\n  setTodos: value => dispatch(setTodosFromStore(value)),\n  setError: value => dispatch(setErrorFromStore(value)),\n  setLoading: value => dispatch(setLoadingFromStore(value)),\n  setLoaded: value => dispatch(setLoadedFromStore(value)),\n  setSortedColumn: value => dispatch(setSortedColumnFromStore(value)),\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired,\n  sortedColumn: PropTypes.string.isRequired,\n  setTodos: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  setLoaded: PropTypes.func.isRequired,\n  setError: PropTypes.func.isRequired,\n  setSortedColumn: PropTypes.func.isRequired,\n};\n\nexport default connect(getExtraData, getExtraMethods)(TodoList);\n","const URL_USERS = 'https://jsonplaceholder.typicode.com/users';\nconst URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const fetchTodosAndUsers = () => Promise\n  .all([fetch(URL_USERS), fetch(URL_TODOS)])\n  .then(responses => Promise.all(responses.map(response => response.json())));\n","import React from 'react';\nimport './index.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}